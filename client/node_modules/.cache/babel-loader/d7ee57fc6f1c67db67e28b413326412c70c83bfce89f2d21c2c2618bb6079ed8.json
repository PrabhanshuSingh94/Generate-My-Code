{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Generate My Code/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Copy, Send, Plus, Edit3, Check, X, MessageSquare } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [editingChatId, setEditingChatId] = useState(null);\n  const [tempTitle, setTempTitle] = useState(\"\");\n  const [copySuccess, setCopySuccess] = useState({});\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [tempMessage, setTempMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // Get current chat object\n  const currentChat = chats.find(chat => chat.id === currentChatId);\n\n  // Auto scroll to bottom\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  // Auto-resize textarea\n  const adjustTextareaHeight = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = Math.min(textarea.scrollHeight, 200) + 'px';\n    }\n  };\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [input]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages, isTyping]);\n\n  // Copy to clipboard function\n  const copyToClipboard = async (text, codeBlockId) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopySuccess(prev => ({\n        ...prev,\n        [codeBlockId]: \"Copied!\"\n      }));\n      setTimeout(() => {\n        setCopySuccess(prev => {\n          const newState = {\n            ...prev\n          };\n          delete newState[codeBlockId];\n          return newState;\n        });\n      }, 2000);\n    } catch (err) {\n      console.error(\"Failed to copy: \", err);\n      setCopySuccess(prev => ({\n        ...prev,\n        [codeBlockId]: \"Failed to copy\"\n      }));\n      setTimeout(() => {\n        setCopySuccess(prev => {\n          const newState = {\n            ...prev\n          };\n          delete newState[codeBlockId];\n          return newState;\n        });\n      }, 2000);\n    }\n  };\n\n  // Simple and safe message renderer\n  const renderBotMessage = (content, messageIndex) => {\n    if (!content) return \"\";\n    const contentStr = String(content);\n    const elements = [];\n    let currentIndex = 0;\n\n    // Find all code blocks first\n    const codeBlockRegex = /```(\\w+)?\\n?([\\s\\S]*?)```/g;\n    const headingRegex = /^(#{1,6})\\s+(.+)$/gm;\n    let lastIndex = 0;\n    let match;\n    let elementKey = 0;\n\n    // Process code blocks\n    while ((match = codeBlockRegex.exec(contentStr)) !== null) {\n      // Add text before code block\n      if (match.index > lastIndex) {\n        const textBefore = contentStr.substring(lastIndex, match.index).trim();\n        if (textBefore) {\n          elements.push(/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-3 text-gray-800 leading-relaxed whitespace-pre-wrap\",\n            children: textBefore\n          }, `text-${elementKey++}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this));\n        }\n      }\n\n      // Add code block\n      const language = match[1] || 'javascript';\n      const code = match[2] || '';\n      const codeBlockId = `${messageIndex}-${elementKey}`;\n      elements.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4 border border-gray-300 rounded-lg overflow-hidden relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center bg-gray-100 px-4 py-2 border-b border-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-600 font-medium\",\n            children: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => copyToClipboard(code, codeBlockId),\n              className: \"flex items-center gap-1 px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded text-xs text-gray-700 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Copy, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), \"Copy code\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), copySuccess[codeBlockId] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute top-full right-0 mt-1 px-2 py-1 bg-gray-800 text-white text-xs rounded shadow-lg z-10\",\n              children: copySuccess[codeBlockId]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-gray-900 text-green-400 p-4 overflow-x-auto m-0 font-mono text-sm leading-relaxed\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, `code-${elementKey++}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this));\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add remaining text after last code block\n    if (lastIndex < contentStr.length) {\n      const remainingText = contentStr.substring(lastIndex).trim();\n      if (remainingText) {\n        // Process headings in remaining text\n        const lines = remainingText.split('\\n');\n        lines.forEach((line, lineIndex) => {\n          const headingMatch = line.match(/^(#{1,6})\\s+(.+)$/);\n          if (headingMatch) {\n            const level = headingMatch[1].length;\n            const text = headingMatch[2];\n            const headingClasses = {\n              1: \"text-2xl font-bold mt-6 mb-4 text-gray-900\",\n              2: \"text-xl font-bold mt-5 mb-3 text-gray-900\",\n              3: \"text-lg font-bold mt-4 mb-2 text-gray-900\",\n              4: \"text-base font-bold mt-3 mb-2 text-gray-900\",\n              5: \"text-sm font-bold mt-2 mb-1 text-gray-900\",\n              6: \"text-xs font-bold mt-2 mb-1 text-gray-900\"\n            };\n            elements.push(/*#__PURE__*/React.createElement(`h${level}`, {\n              key: `heading-${elementKey++}`,\n              className: headingClasses[level] || headingClasses[1]\n            }, text));\n          } else if (line.trim()) {\n            elements.push(/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-3 text-gray-800 leading-relaxed\",\n              children: line.trim()\n            }, `line-${elementKey++}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this));\n          }\n        });\n      }\n    }\n\n    // If no elements were created, return the original text\n    if (elements.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-3 text-gray-800 leading-relaxed whitespace-pre-wrap\",\n        children: contentStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: elements\n    }, void 0, false);\n  };\n\n  // Typing animation function\n  // const typeMessage = (message, chatId) => {\n  //   setIsTyping(true);\n  //   const words = message.split(' ');\n  //   let currentText = '';\n  //   let wordIndex = 0;\n\n  //   const typeInterval = setInterval(() => {\n  //     if (wordIndex < words.length) {\n  //       currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n\n  //       setChats((prevChats) =>\n  //         prevChats.map((chat) => {\n  //           if (chat.id === chatId) {\n  //             const messages = [...chat.messages];\n  //             if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n  //               messages[messages.length - 1] = {\n  //                 ...messages[messages.length - 1],\n  //                 content: currentText,\n  //                 isTyping: true\n  //               };\n  //             }\n  //             return { ...chat, messages };\n  //           }\n  //           return chat;\n  //         })\n  //       );\n\n  //       wordIndex++;\n  //     } else {\n  //       setIsTyping(false);\n  //       setChats((prevChats) =>\n  //         prevChats.map((chat) => {\n  //           if (chat.id === chatId) {\n  //             const messages = [...chat.messages];\n  //             if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n  //               messages[messages.length - 1] = {\n  //                 ...messages[messages.length - 1],\n  //                 isTyping: false\n  //               };\n  //             }\n  //             return { ...chat, messages };\n  //           }\n  //           return chat;\n  //         })\n  //       );\n  //       clearInterval(typeInterval);\n  //     }\n  //   }, 50);\n  // };\n  const typeMessage = (message, chatId) => {\n    setIsTyping(true);\n\n    // Detect code block at start\n    const codeBlockRegex = /^```(\\w+)?\\n?([\\s\\S]*?)```$/;\n    const headingRegex = /^(#{1,6})\\s+(.+)/;\n    if (codeBlockRegex.test(message) || headingRegex.test(message)) {\n      // Directly render full formatted block (no typing effect)\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = {\n            ...messages[messages.length - 1],\n            content: message,\n            isTyping: false\n          };\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n      setIsTyping(false);\n      return;\n    }\n\n    // Else do typing effect for plain text\n    const words = message.split(' ');\n    let currentText = '';\n    let wordIndex = 0;\n    const typeInterval = setInterval(() => {\n      if (wordIndex < words.length) {\n        currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n        setChats(prevChats => prevChats.map(chat => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n              messages[messages.length - 1] = {\n                ...messages[messages.length - 1],\n                content: currentText,\n                isTyping: true\n              };\n            }\n            return {\n              ...chat,\n              messages\n            };\n          }\n          return chat;\n        }));\n        wordIndex++;\n      } else {\n        setIsTyping(false);\n        clearInterval(typeInterval);\n      }\n    }, 50);\n  };\n\n  // Handle sending message\n  const handleSend = async () => {\n    if (!input.trim() || isTyping) return;\n    let chatId = currentChatId;\n    let updatedChats = [...chats];\n    if (!chatId) {\n      const newChat = {\n        id: Date.now(),\n        title: input.length > 40 ? input.substring(0, 40) + \"...\" : input.trim(),\n        messages: [],\n        createdAt: new Date()\n      };\n      updatedChats = [newChat, ...updatedChats];\n      chatId = newChat.id;\n      setCurrentChatId(chatId);\n    } else {\n      // Update existing chat title if it's still \"New Chat\"\n      const currentChat = updatedChats.find(chat => chat.id === chatId);\n      if (currentChat && currentChat.title === \"New Chat\") {\n        updatedChats = updatedChats.map(chat => chat.id === chatId ? {\n          ...chat,\n          title: input.length > 40 ? input.substring(0, 40) + \"...\" : input.trim()\n        } : chat);\n      }\n    }\n    const userMessage = {\n      role: \"user\",\n      content: input.trim()\n    };\n    updatedChats = updatedChats.map(chat => {\n      if (chat.id === chatId) {\n        return {\n          ...chat,\n          messages: [...chat.messages, userMessage]\n        };\n      }\n      return chat;\n    });\n    setChats(updatedChats);\n    setInput(\"\");\n    const botMessage = {\n      role: \"bot\",\n      content: \"\",\n      isTyping: true\n    };\n    setChats(prevChats => prevChats.map(chat => chat.id === chatId ? {\n      ...chat,\n      messages: [...chat.messages, botMessage]\n    } : chat));\n    // Start blinking animation\n    let blinkState = 0;\n    const blinkMessages = [\"Generating solution...\", \"Finding the best solution...\", \"Generating solution...\", \"Finding the best solution...\"];\n    const blinkInterval = setInterval(() => {\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = {\n            ...messages[messages.length - 1],\n            content: blinkMessages[blinkState % blinkMessages.length],\n            isTyping: true\n          };\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n      blinkState++;\n    }, 3000);\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: input.trim()\n        })\n      });\n      const data = await res.json();\n      clearInterval(blinkInterval);\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = errorMessage;\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleNewChat = () => {\n    const newChat = {\n      id: Date.now(),\n      title: \"New Chat\",\n      messages: [],\n      createdAt: new Date()\n    };\n    setChats([newChat, ...chats]);\n    setCurrentChatId(newChat.id);\n    setInput(\"\");\n  };\n  const handleSelectChat = id => {\n    if (isTyping) return;\n    setCurrentChatId(id);\n    setInput(\"\");\n    setEditingChatId(null);\n  };\n  const startEditingTitle = (id, currentTitle) => {\n    setEditingChatId(id);\n    setTempTitle(currentTitle);\n  };\n  const saveEditedTitle = id => {\n    if (tempTitle.trim()) {\n      setChats(prevChats => prevChats.map(chat => chat.id === id ? {\n        ...chat,\n        title: tempTitle.trim()\n      } : chat));\n    }\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n  const cancelEditing = () => {\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  // Message editing functions\n  const startEditingMessage = (messageIndex, content) => {\n    setEditingMessageId(messageIndex);\n    setTempMessage(content);\n  };\n  const saveEditedMessage = async messageIndex => {\n    if (!tempMessage.trim()) return;\n    const updatedChats = chats.map(chat => {\n      if (chat.id === currentChatId) {\n        const messages = [...chat.messages];\n        messages[messageIndex] = {\n          ...messages[messageIndex],\n          content: tempMessage.trim()\n        };\n        const newMessages = messages.slice(0, messageIndex + 1);\n        return {\n          ...chat,\n          messages: newMessages\n        };\n      }\n      return chat;\n    });\n    setChats(updatedChats);\n    setEditingMessageId(null);\n    setTempMessage(\"\");\n    const chatId = currentChatId;\n    const botMessage = {\n      role: \"bot\",\n      content: \"Generate solution...\",\n      isTyping: true\n    };\n    setChats(prevChats => prevChats.map(chat => chat.id === chatId ? {\n      ...chat,\n      messages: [...chat.messages, botMessage]\n    } : chat));\n    let blinkState = 0;\n    const blinkMessages = [\"Generating solution...\", \"Finding the best solution...\", \"Generating solution...\", \"Finding the best solution...\"];\n    const blinkInterval = setInterval(() => {\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = {\n            ...messages[messages.length - 1],\n            content: blinkMessages[blinkState % blinkMessages.length],\n            isTyping: true\n          };\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n      blinkState++;\n    }, 3000);\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: tempMessage.trim()\n        })\n      });\n      const data = await res.json();\n      clearInterval(blinkInterval);\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = errorMessage;\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n    }\n  };\n  const cancelMessageEditing = () => {\n    setEditingMessageId(null);\n    setTempMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen bg-white text-gray-900 flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 h-screen overflow-y-auto bg-gray-900 text-white flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"w-full flex items-center justify-center gap-2 px-4 py-3 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), \"New chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto px-2\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `group flex items-center gap-3 p-3 rounded-lg cursor-pointer transition-colors mb-1 ${chat.id === currentChatId ? \"bg-gray-800\" : \"hover:bg-gray-800\"}`,\n          onClick: () => handleSelectChat(chat.id),\n          children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n            size: 16,\n            className: \"text-gray-400 flex-shrink-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this), editingChatId === chat.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: tempTitle,\n              onChange: e => setTempTitle(e.target.value),\n              className: \"flex-1 bg-gray-700 text-white px-2 py-1 rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              autoFocus: true,\n              onKeyDown: e => {\n                if (e.key === 'Enter') saveEditedTitle(chat.id);\n                if (e.key === 'Escape') cancelEditing();\n              },\n              onBlur: () => saveEditedTitle(chat.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => saveEditedTitle(chat.id),\n              className: \"text-green-400 hover:text-green-300 p-1\",\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelEditing,\n              className: \"text-red-400 hover:text-red-300 p-1\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex-1 truncate text-sm cursor-pointer\",\n              onDoubleClick: () => startEditingTitle(chat.id, chat.title),\n              children: chat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 19\n            }, this), chat.id === currentChatId && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"opacity-0 group-hover:opacity-100 text-gray-400 hover:text-white transition-opacity p-1\",\n              onClick: e => {\n                e.stopPropagation();\n                startEditingTitle(chat.id, chat.title);\n              },\n              children: /*#__PURE__*/_jsxDEV(Edit3, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen overflow-y-auto flex-1 flex flex-col\",\n      children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-b border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-lg font-medium\",\n            children: currentChat.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-6 space-y-4\",\n          children: [currentChat.messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-none\",\n            children: msg.role === \"user\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end mb-4 group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-w-2xl relative\",\n                children: editingMessageId === idx ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-blue-600 text-white px-4 py-3 rounded-3xl rounded-br-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: tempMessage,\n                    onChange: e => setTempMessage(e.target.value),\n                    className: \"w-full bg-transparent text-white resize-none border-none outline-none\",\n                    rows: Math.max(1, tempMessage.split('\\n').length),\n                    autoFocus: true,\n                    onKeyDown: e => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        saveEditedMessage(idx);\n                      }\n                      if (e.key === 'Escape') {\n                        cancelMessageEditing();\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2 mt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => saveEditedMessage(idx),\n                      className: \"px-3 py-1 bg-white bg-opacity-20 text-white rounded-full text-xs hover:bg-opacity-30 transition-colors\",\n                      children: /*#__PURE__*/_jsxDEV(Check, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 652,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: cancelMessageEditing,\n                      className: \"px-3 py-1 bg-white bg-opacity-20 text-white rounded-full text-xs hover:bg-opacity-30 transition-colors\",\n                      children: /*#__PURE__*/_jsxDEV(X, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 658,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 654,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 text-white px-4 py-3 rounded-3xl rounded-br-md text-sm leading-relaxed\",\n                    children: msg.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 664,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditingMessage(idx, msg.content),\n                    className: \"absolute -bottom-8 right-0 opacity-0 group-hover:opacity-100 text-gray-400 hover:text-gray-600 transition-all duration-200 text-xs\",\n                    children: /*#__PURE__*/_jsxDEV(Edit3, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 671,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-start mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-w-4xl w-full\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 px-4 py-3 rounded-3xl rounded-bl-md\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"prose prose-sm max-w-none text-sm\",\n                    children: [renderBotMessage(msg.content, idx), msg.isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"inline-block w-2 h-5 bg-gray-900 animate-pulse ml-1\",\n                      children: \"|\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 684,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-t border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-4xl mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-end gap-2 bg-gray-50 rounded-3xl px-4 py-2 border border-gray-200 shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: textareaRef,\n                value: input,\n                onChange: e => setInput(e.target.value),\n                onKeyDown: handleKeyPress,\n                placeholder: \"Message Alien...\",\n                disabled: isTyping,\n                className: \"flex-1 bg-transparent py-2 resize-none border-none outline-none min-h-6 max-h-48 text-gray-900 placeholder-gray-500\",\n                rows: 1,\n                style: {\n                  overflow: 'hidden'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSend,\n                disabled: !input.trim() || isTyping,\n                className: `p-2 rounded-full transition-all duration-200 ${!input.trim() || isTyping ? \"bg-gray-200 text-gray-400 cursor-not-allowed\" : \"bg-gray-900 text-white hover:bg-gray-700 shadow-sm\"}`,\n                children: /*#__PURE__*/_jsxDEV(Send, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold text-gray-900\",\n            children: \"ChatGPT Clone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-lg max-w-md\",\n            children: \"Start a conversation by creating a new chat or selecting an existing one.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChat,\n            className: \"inline-flex items-center gap-2 bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 17\n            }, this), \"Start New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 539,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3lRzcqg/EjQppuStrL1uRAt2vk0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Copy","Send","Plus","Edit3","Check","X","MessageSquare","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","chats","setChats","currentChatId","setCurrentChatId","input","setInput","isTyping","setIsTyping","editingChatId","setEditingChatId","tempTitle","setTempTitle","copySuccess","setCopySuccess","editingMessageId","setEditingMessageId","tempMessage","setTempMessage","messagesEndRef","textareaRef","currentChat","find","chat","id","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","adjustTextareaHeight","textarea","style","height","Math","min","scrollHeight","messages","copyToClipboard","text","codeBlockId","navigator","clipboard","writeText","prev","setTimeout","newState","err","console","error","renderBotMessage","content","messageIndex","contentStr","String","elements","currentIndex","codeBlockRegex","headingRegex","lastIndex","match","elementKey","exec","index","textBefore","substring","trim","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","language","code","onClick","size","length","remainingText","lines","split","forEach","line","lineIndex","headingMatch","level","headingClasses","createElement","key","typeMessage","message","chatId","test","prevChats","map","words","currentText","wordIndex","typeInterval","setInterval","role","clearInterval","handleSend","updatedChats","newChat","Date","now","title","createdAt","userMessage","botMessage","blinkState","blinkMessages","blinkInterval","res","fetch","method","headers","body","JSON","stringify","prompt","data","json","generated","errorMessage","handleKeyPress","e","shiftKey","preventDefault","handleNewChat","handleSelectChat","startEditingTitle","currentTitle","saveEditedTitle","cancelEditing","startEditingMessage","saveEditedMessage","newMessages","slice","cancelMessageEditing","type","value","onChange","target","autoFocus","onKeyDown","onBlur","onDoubleClick","stopPropagation","msg","idx","rows","max","ref","placeholder","disabled","overflow","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Generate My Code/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Copy, Send, Plus, Edit3, Check, X, MessageSquare } from \"lucide-react\";\n\nfunction App() {\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [editingChatId, setEditingChatId] = useState(null);\n  const [tempTitle, setTempTitle] = useState(\"\");\n  const [copySuccess, setCopySuccess] = useState({});\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [tempMessage, setTempMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // Get current chat object\n  const currentChat = chats.find((chat) => chat.id === currentChatId);\n\n  // Auto scroll to bottom\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  // Auto-resize textarea\n  const adjustTextareaHeight = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = Math.min(textarea.scrollHeight, 200) + 'px';\n    }\n  };\n\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [input]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [currentChat?.messages, isTyping]);\n\n  // Copy to clipboard function\n  const copyToClipboard = async (text, codeBlockId) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopySuccess(prev => ({ ...prev, [codeBlockId]: \"Copied!\" }));\n      setTimeout(() => {\n        setCopySuccess(prev => {\n          const newState = { ...prev };\n          delete newState[codeBlockId];\n          return newState;\n        });\n      }, 2000);\n    } catch (err) {\n      console.error(\"Failed to copy: \", err);\n      setCopySuccess(prev => ({ ...prev, [codeBlockId]: \"Failed to copy\" }));\n      setTimeout(() => {\n        setCopySuccess(prev => {\n          const newState = { ...prev };\n          delete newState[codeBlockId];\n          return newState;\n        });\n      }, 2000);\n    }\n  };\n\n  // Simple and safe message renderer\n  const renderBotMessage = (content, messageIndex) => {\n    if (!content) return \"\";\n\n    const contentStr = String(content);\n    const elements = [];\n    let currentIndex = 0;\n\n    // Find all code blocks first\n    const codeBlockRegex = /```(\\w+)?\\n?([\\s\\S]*?)```/g;\n    const headingRegex = /^(#{1,6})\\s+(.+)$/gm;\n\n    let lastIndex = 0;\n    let match;\n    let elementKey = 0;\n\n    // Process code blocks\n    while ((match = codeBlockRegex.exec(contentStr)) !== null) {\n      // Add text before code block\n      if (match.index > lastIndex) {\n        const textBefore = contentStr.substring(lastIndex, match.index).trim();\n        if (textBefore) {\n          elements.push(\n            <p key={`text-${elementKey++}`} className=\"mb-3 text-gray-800 leading-relaxed whitespace-pre-wrap\">\n              {textBefore}\n            </p>\n          );\n        }\n      }\n\n      // Add code block\n      const language = match[1] || 'javascript';\n      const code = match[2] || '';\n      const codeBlockId = `${messageIndex}-${elementKey}`;\n\n      elements.push(\n        <div key={`code-${elementKey++}`} className=\"my-4 border border-gray-300 rounded-lg overflow-hidden relative\">\n          <div className=\"flex justify-between items-center bg-gray-100 px-4 py-2 border-b border-gray-300\">\n            <span className=\"text-xs text-gray-600 font-medium\">{language}</span>\n            <div className=\"relative\">\n              <button\n                onClick={() => copyToClipboard(code, codeBlockId)}\n                className=\"flex items-center gap-1 px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded text-xs text-gray-700 transition-colors\"\n              >\n                <Copy size={12} />\n                Copy code\n              </button>\n              {copySuccess[codeBlockId] && (\n                <div className=\"absolute top-full right-0 mt-1 px-2 py-1 bg-gray-800 text-white text-xs rounded shadow-lg z-10\">\n                  {copySuccess[codeBlockId]}\n                </div>\n              )}\n            </div>\n          </div>\n          <pre className=\"bg-gray-900 text-green-400 p-4 overflow-x-auto m-0 font-mono text-sm leading-relaxed\">\n            <code>{code}</code>\n          </pre>\n        </div>\n      );\n\n      lastIndex = match.index + match[0].length;\n    }\n\n    // Add remaining text after last code block\n    if (lastIndex < contentStr.length) {\n      const remainingText = contentStr.substring(lastIndex).trim();\n      if (remainingText) {\n        // Process headings in remaining text\n        const lines = remainingText.split('\\n');\n        lines.forEach((line, lineIndex) => {\n          const headingMatch = line.match(/^(#{1,6})\\s+(.+)$/);\n          if (headingMatch) {\n            const level = headingMatch[1].length;\n            const text = headingMatch[2];\n            const headingClasses = {\n              1: \"text-2xl font-bold mt-6 mb-4 text-gray-900\",\n              2: \"text-xl font-bold mt-5 mb-3 text-gray-900\",\n              3: \"text-lg font-bold mt-4 mb-2 text-gray-900\",\n              4: \"text-base font-bold mt-3 mb-2 text-gray-900\",\n              5: \"text-sm font-bold mt-2 mb-1 text-gray-900\",\n              6: \"text-xs font-bold mt-2 mb-1 text-gray-900\"\n            };\n\n            elements.push(\n              React.createElement(\n                `h${level}`,\n                {\n                  key: `heading-${elementKey++}`,\n                  className: headingClasses[level] || headingClasses[1]\n                },\n                text\n              )\n            );\n          } else if (line.trim()) {\n            elements.push(\n              <p key={`line-${elementKey++}`} className=\"mb-3 text-gray-800 leading-relaxed\">\n                {line.trim()}\n              </p>\n            );\n          }\n        });\n      }\n    }\n\n    // If no elements were created, return the original text\n    if (elements.length === 0) {\n      return (\n        <p className=\"mb-3 text-gray-800 leading-relaxed whitespace-pre-wrap\">\n          {contentStr}\n        </p>\n      );\n    }\n\n    return <>{elements}</>;\n  };\n\n  // Typing animation function\n  // const typeMessage = (message, chatId) => {\n  //   setIsTyping(true);\n  //   const words = message.split(' ');\n  //   let currentText = '';\n  //   let wordIndex = 0;\n\n  //   const typeInterval = setInterval(() => {\n  //     if (wordIndex < words.length) {\n  //       currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n\n  //       setChats((prevChats) =>\n  //         prevChats.map((chat) => {\n  //           if (chat.id === chatId) {\n  //             const messages = [...chat.messages];\n  //             if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n  //               messages[messages.length - 1] = {\n  //                 ...messages[messages.length - 1],\n  //                 content: currentText,\n  //                 isTyping: true\n  //               };\n  //             }\n  //             return { ...chat, messages };\n  //           }\n  //           return chat;\n  //         })\n  //       );\n\n  //       wordIndex++;\n  //     } else {\n  //       setIsTyping(false);\n  //       setChats((prevChats) =>\n  //         prevChats.map((chat) => {\n  //           if (chat.id === chatId) {\n  //             const messages = [...chat.messages];\n  //             if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n  //               messages[messages.length - 1] = {\n  //                 ...messages[messages.length - 1],\n  //                 isTyping: false\n  //               };\n  //             }\n  //             return { ...chat, messages };\n  //           }\n  //           return chat;\n  //         })\n  //       );\n  //       clearInterval(typeInterval);\n  //     }\n  //   }, 50);\n  // };\n  const typeMessage = (message, chatId) => {\n  setIsTyping(true);\n\n  // Detect code block at start\n  const codeBlockRegex = /^```(\\w+)?\\n?([\\s\\S]*?)```$/;\n  const headingRegex = /^(#{1,6})\\s+(.+)/;\n\n  if (codeBlockRegex.test(message) || headingRegex.test(message)) {\n    // Directly render full formatted block (no typing effect)\n    setChats(prevChats =>\n      prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = {\n            ...messages[messages.length - 1],\n            content: message,\n            isTyping: false\n          };\n          return { ...chat, messages };\n        }\n        return chat;\n      })\n    );\n    setIsTyping(false);\n    return;\n  }\n\n  // Else do typing effect for plain text\n  const words = message.split(' ');\n  let currentText = '';\n  let wordIndex = 0;\n\n  const typeInterval = setInterval(() => {\n    if (wordIndex < words.length) {\n      currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n\n      setChats(prevChats =>\n        prevChats.map(chat => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n              messages[messages.length - 1] = {\n                ...messages[messages.length - 1],\n                content: currentText,\n                isTyping: true\n              };\n            }\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n\n      wordIndex++;\n    } else {\n      setIsTyping(false);\n      clearInterval(typeInterval);\n    }\n  }, 50);\n};\n\n\n  // Handle sending message\n  const handleSend = async () => {\n    if (!input.trim() || isTyping) return;\n\n    let chatId = currentChatId;\n    let updatedChats = [...chats];\n\n    if (!chatId) {\n      const newChat = {\n        id: Date.now(),\n        title: input.length > 40 ? input.substring(0, 40) + \"...\" : input.trim(),\n        messages: [],\n        createdAt: new Date()\n      };\n      updatedChats = [newChat, ...updatedChats];\n      chatId = newChat.id;\n      setCurrentChatId(chatId);\n    } else {\n      // Update existing chat title if it's still \"New Chat\"\n      const currentChat = updatedChats.find(chat => chat.id === chatId);\n      if (currentChat && currentChat.title === \"New Chat\") {\n        updatedChats = updatedChats.map(chat =>\n          chat.id === chatId\n            ? { ...chat, title: input.length > 40 ? input.substring(0, 40) + \"...\" : input.trim() }\n            : chat\n        );\n      }\n    }\n\n    const userMessage = { role: \"user\", content: input.trim() };\n    updatedChats = updatedChats.map((chat) => {\n      if (chat.id === chatId) {\n        return { ...chat, messages: [...chat.messages, userMessage] };\n      }\n      return chat;\n    });\n\n    setChats(updatedChats);\n    setInput(\"\");\n\n    const botMessage = { role: \"bot\", content: \"\", isTyping: true };\n    setChats((prevChats) =>\n      prevChats.map((chat) =>\n        chat.id === chatId ? { ...chat, messages: [...chat.messages, botMessage] } : chat\n      )\n    );\n    // Start blinking animation\n    let blinkState = 0;\n    const blinkMessages = [\n      \"Generating solution...\",\n      \"Finding the best solution...\",\n      \"Generating solution...\",\n      \"Finding the best solution...\"\n    ];\n\n    const blinkInterval = setInterval(() => {\n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = {\n              ...messages[messages.length - 1],\n              content: blinkMessages[blinkState % blinkMessages.length],\n              isTyping: true\n            };\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n      blinkState++;\n    }, 3000);\n\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: input.trim() })\n      });\n      const data = await res.json();\n      clearInterval(blinkInterval);\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n\n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = errorMessage;\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleNewChat = () => {\n    const newChat = {\n      id: Date.now(),\n      title: \"New Chat\",\n      messages: [],\n      createdAt: new Date()\n    };\n    setChats([newChat, ...chats]);\n    setCurrentChatId(newChat.id);\n    setInput(\"\");\n  };\n\n  const handleSelectChat = (id) => {\n    if (isTyping) return;\n    setCurrentChatId(id);\n    setInput(\"\");\n    setEditingChatId(null);\n  };\n\n  const startEditingTitle = (id, currentTitle) => {\n    setEditingChatId(id);\n    setTempTitle(currentTitle);\n  };\n\n  const saveEditedTitle = (id) => {\n    if (tempTitle.trim()) {\n      setChats((prevChats) =>\n        prevChats.map((chat) => (chat.id === id ? { ...chat, title: tempTitle.trim() } : chat))\n      );\n    }\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  const cancelEditing = () => {\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  // Message editing functions\n  const startEditingMessage = (messageIndex, content) => {\n    setEditingMessageId(messageIndex);\n    setTempMessage(content);\n  };\n\n  const saveEditedMessage = async (messageIndex) => {\n    if (!tempMessage.trim()) return;\n\n    const updatedChats = chats.map((chat) => {\n      if (chat.id === currentChatId) {\n        const messages = [...chat.messages];\n        messages[messageIndex] = { ...messages[messageIndex], content: tempMessage.trim() };\n        const newMessages = messages.slice(0, messageIndex + 1);\n        return { ...chat, messages: newMessages };\n      }\n      return chat;\n    });\n\n    setChats(updatedChats);\n    setEditingMessageId(null);\n    setTempMessage(\"\");\n\n    const chatId = currentChatId;\n    const botMessage = { role: \"bot\", content: \"Generate solution...\", isTyping: true };\n    setChats((prevChats) =>\n      prevChats.map((chat) =>\n        chat.id === chatId ? { ...chat, messages: [...chat.messages, botMessage] } : chat\n      )\n    );\n\n    let blinkState = 0;\n    const blinkMessages = [\n      \"Generating solution...\",\n      \"Finding the best solution...\",\n      \"Generating solution...\",\n      \"Finding the best solution...\"\n    ];\n\n    const blinkInterval = setInterval(() => {\n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = {\n              ...messages[messages.length - 1],\n              content: blinkMessages[blinkState % blinkMessages.length],\n              isTyping: true\n            };\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n      blinkState++;\n    }, 3000);\n\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: tempMessage.trim() })\n      });\n      const data = await res.json();\n      clearInterval(blinkInterval);\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n\n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = errorMessage;\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n    }\n  };\n\n  const cancelMessageEditing = () => {\n    setEditingMessageId(null);\n    setTempMessage(\"\");\n  };\n\n  return (\n    <div className=\"h-screen bg-white text-gray-900 flex\">\n      {/* Sidebar */}\n      <div className=\"w-64 h-screen overflow-y-auto bg-gray-900 text-white flex flex-col\">\n        <div className=\"p-4\">\n          <button\n            onClick={handleNewChat}\n            className=\"w-full flex items-center justify-center gap-2 px-4 py-3 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors\"\n          >\n            <Plus size={16} />\n            New chat\n          </button>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto px-2\">\n          {chats.map((chat) => (\n            <div\n              key={chat.id}\n              className={`group flex items-center gap-3 p-3 rounded-lg cursor-pointer transition-colors mb-1 ${chat.id === currentChatId ? \"bg-gray-800\" : \"hover:bg-gray-800\"\n                }`}\n              onClick={() => handleSelectChat(chat.id)}\n            >\n              <MessageSquare size={16} className=\"text-gray-400 flex-shrink-0\" />\n\n              {editingChatId === chat.id ? (\n                <div className=\"flex-1 flex items-center gap-2\">\n                  <input\n                    type=\"text\"\n                    value={tempTitle}\n                    onChange={(e) => setTempTitle(e.target.value)}\n                    className=\"flex-1 bg-gray-700 text-white px-2 py-1 rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    autoFocus\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') saveEditedTitle(chat.id);\n                      if (e.key === 'Escape') cancelEditing();\n                    }}\n                    onBlur={() => saveEditedTitle(chat.id)}\n                  />\n                  <button\n                    onClick={() => saveEditedTitle(chat.id)}\n                    className=\"text-green-400 hover:text-green-300 p-1\"\n                  >\n                    <Check size={14} />\n                  </button>\n                  <button\n                    onClick={cancelEditing}\n                    className=\"text-red-400 hover:text-red-300 p-1\"\n                  >\n                    <X size={14} />\n                  </button>\n                </div>\n              ) : (\n                <>\n                  <span\n                    className=\"flex-1 truncate text-sm cursor-pointer\"\n                    onDoubleClick={() => startEditingTitle(chat.id, chat.title)}\n                  >\n                    {chat.title}\n                  </span>\n                  {chat.id === currentChatId && (\n                    <button\n                      className=\"opacity-0 group-hover:opacity-100 text-gray-400 hover:text-white transition-opacity p-1\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        startEditingTitle(chat.id, chat.title);\n                      }}\n                    >\n                      <Edit3 size={14} />\n                    </button>\n                  )}\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className=\"h-screen overflow-y-auto flex-1 flex flex-col\">\n        {currentChat ? (\n          <>\n            <div className=\"border-b border-gray-200 p-4\">\n              <h1 className=\"text-lg font-medium\">{currentChat.title}</h1>\n            </div>\n\n            <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\n              {currentChat.messages.map((msg, idx) => (\n                <div key={idx} className=\"max-w-none\">\n                  {msg.role === \"user\" ? (\n                    <div className=\"flex justify-end mb-4 group\">\n                      <div className=\"max-w-2xl relative\">\n                        {editingMessageId === idx ? (\n                          <div className=\"bg-blue-600 text-white px-4 py-3 rounded-3xl rounded-br-md\">\n                            <textarea\n                              value={tempMessage}\n                              onChange={(e) => setTempMessage(e.target.value)}\n                              className=\"w-full bg-transparent text-white resize-none border-none outline-none\"\n                              rows={Math.max(1, tempMessage.split('\\n').length)}\n                              autoFocus\n                              onKeyDown={(e) => {\n                                if (e.key === 'Enter' && !e.shiftKey) {\n                                  e.preventDefault();\n                                  saveEditedMessage(idx);\n                                }\n                                if (e.key === 'Escape') {\n                                  cancelMessageEditing();\n                                }\n                              }}\n                            />\n                            <div className=\"flex gap-2 mt-2\">\n                              <button\n                                onClick={() => saveEditedMessage(idx)}\n                                className=\"px-3 py-1 bg-white bg-opacity-20 text-white rounded-full text-xs hover:bg-opacity-30 transition-colors\"\n                              >\n                                <Check size={12} />\n                              </button>\n                              <button\n                                onClick={cancelMessageEditing}\n                                className=\"px-3 py-1 bg-white bg-opacity-20 text-white rounded-full text-xs hover:bg-opacity-30 transition-colors\"\n                              >\n                                <X size={12} />\n                              </button>\n                            </div>\n                          </div>\n                        ) : (\n                          <>\n                            <div className=\"bg-blue-600 text-white px-4 py-3 rounded-3xl rounded-br-md text-sm leading-relaxed\">\n                              {msg.content}\n                            </div>\n                            <button\n                              onClick={() => startEditingMessage(idx, msg.content)}\n                              className=\"absolute -bottom-8 right-0 opacity-0 group-hover:opacity-100 text-gray-400 hover:text-gray-600 transition-all duration-200 text-xs\"\n                            >\n                              <Edit3 size={14} />\n                            </button>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"flex justify-start mb-4\">\n                      <div className=\"max-w-4xl w-full\">\n                        <div className=\"bg-gray-50 px-4 py-3 rounded-3xl rounded-bl-md\">\n                          <div className=\"prose prose-sm max-w-none text-sm\">\n                            {renderBotMessage(msg.content, idx)}\n                            {msg.isTyping && (\n                              <span className=\"inline-block w-2 h-5 bg-gray-900 animate-pulse ml-1\">|</span>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n\n            <div className=\"border-t border-gray-200 p-4\">\n              <div className=\"max-w-4xl mx-auto\">\n                <div className=\"flex items-end gap-2 bg-gray-50 rounded-3xl px-4 py-2 border border-gray-200 shadow-sm\">\n                  <textarea\n                    ref={textareaRef}\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    onKeyDown={handleKeyPress}\n                    placeholder=\"Message Alien...\"\n                    disabled={isTyping}\n                    className=\"flex-1 bg-transparent py-2 resize-none border-none outline-none min-h-6 max-h-48 text-gray-900 placeholder-gray-500\"\n                    rows={1}\n                    style={{ overflow: 'hidden' }}\n                  />\n                  <button\n                    onClick={handleSend}\n                    disabled={!input.trim() || isTyping}\n                    className={`p-2 rounded-full transition-all duration-200 ${!input.trim() || isTyping\n                        ? \"bg-gray-200 text-gray-400 cursor-not-allowed\"\n                        : \"bg-gray-900 text-white hover:bg-gray-700 shadow-sm\"\n                      }`}\n                  >\n                    <Send size={18} />\n                  </button>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center\">\n            <div className=\"text-center space-y-6\">\n              <h1 className=\"text-4xl font-bold text-gray-900\">ChatGPT Clone</h1>\n              <p className=\"text-gray-600 text-lg max-w-md\">\n                Start a conversation by creating a new chat or selecting an existing one.\n              </p>\n              <button\n                onClick={handleNewChat}\n                className=\"inline-flex items-center gap-2 bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition-colors\"\n              >\n                <Plus size={20} />\n                Start New Chat\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}