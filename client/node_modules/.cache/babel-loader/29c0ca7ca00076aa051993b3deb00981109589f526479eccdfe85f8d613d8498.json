{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Testing result/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Copy, Send, Plus, Edit3, Check, X, MessageSquare } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chats, setChats] = useState([]); // all chats\n  const [currentChatId, setCurrentChatId] = useState(null); // selected chat\n  const [input, setInput] = useState(\"\"); // current user input\n  const [isTyping, setIsTyping] = useState(false); // typing animation state\n  const [editingChatId, setEditingChatId] = useState(null); // chat being edited\n  const [tempTitle, setTempTitle] = useState(\"\"); // temporary title for editing\n  const messagesEndRef = useRef(null);\n\n  // Get current chat object\n  const currentChat = chats.find(chat => chat.id === currentChatId);\n\n  // Auto scroll to bottom when new messages arrive\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages, isTyping]);\n\n  // Simulate typing animation\n  const typeMessage = (message, chatId) => {\n    setIsTyping(true);\n    const words = message.split(' ');\n    let currentText = '';\n    let wordIndex = 0;\n    const typeInterval = setInterval(() => {\n      if (wordIndex < words.length) {\n        currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n\n        // Update the last message in real-time\n        setChats(prevChats => prevChats.map(chat => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n              messages[messages.length - 1] = {\n                ...messages[messages.length - 1],\n                content: currentText,\n                isTyping: true\n              };\n            }\n            return {\n              ...chat,\n              messages\n            };\n          }\n          return chat;\n        }));\n        wordIndex++;\n      } else {\n        // Typing complete\n        setIsTyping(false);\n        setChats(prevChats => prevChats.map(chat => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n              messages[messages.length - 1] = {\n                ...messages[messages.length - 1],\n                isTyping: false\n              };\n            }\n            return {\n              ...chat,\n              messages\n            };\n          }\n          return chat;\n        }));\n        clearInterval(typeInterval);\n      }\n    }, 50); // Adjust typing speed here\n  };\n\n  // Handle sending message\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!input.trim() || isTyping) return;\n    let chatId = currentChatId;\n    let updatedChats = [...chats];\n\n    // If no chat is selected, create a new one\n    if (!chatId) {\n      const newChat = {\n        id: Date.now(),\n        title: input.length > 30 ? input.substring(0, 30) + \"...\" : input,\n        messages: [],\n        createdAt: new Date()\n      };\n      updatedChats = [newChat, ...updatedChats];\n      chatId = newChat.id;\n      setCurrentChatId(chatId);\n    }\n\n    // Add user message\n    const userMessage = {\n      role: \"user\",\n      content: input.trim()\n    };\n    updatedChats = updatedChats.map(chat => {\n      if (chat.id === chatId) {\n        return {\n          ...chat,\n          messages: [...chat.messages, userMessage]\n        };\n      }\n      return chat;\n    });\n    setChats(updatedChats);\n    const currentInput = input;\n    setInput(\"\");\n\n    // Add empty bot message for typing animation\n    const botMessage = {\n      role: \"bot\",\n      content: \"\",\n      isTyping: true\n    };\n    setChats(prevChats => prevChats.map(chat => chat.id === chatId ? {\n      ...chat,\n      messages: [...chat.messages, botMessage]\n    } : chat));\n\n    // Fetch response and start typing animation\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\");\n      const data = await res.json();\n\n      // Start typing animation\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = errorMessage;\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n    }\n  };\n\n  // Create a new chat manually\n  const handleNewChat = () => {\n    const newChat = {\n      id: Date.now(),\n      title: \"New Chat\",\n      messages: [],\n      createdAt: new Date()\n    };\n    setChats([newChat, ...chats]);\n    setCurrentChatId(newChat.id);\n    setInput(\"\");\n  };\n\n  // Select a chat from sidebar\n  const handleSelectChat = id => {\n    if (isTyping) return; // Prevent chat switching during typing\n    setCurrentChatId(id);\n    setInput(\"\");\n    setEditingChatId(null);\n  };\n\n  // Start editing chat title\n  const startEditingTitle = (id, currentTitle) => {\n    setEditingChatId(id);\n    setTempTitle(currentTitle);\n  };\n\n  // Save edited title\n  const saveEditedTitle = id => {\n    if (tempTitle.trim()) {\n      setChats(prevChats => prevChats.map(chat => chat.id === id ? {\n        ...chat,\n        title: tempTitle.trim()\n      } : chat));\n    }\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  // Cancel editing\n  const cancelEditing = () => {\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  // Copy code to clipboard\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      // You could add a toast notification here\n      console.log(\"Code copied to clipboard!\");\n    });\n  };\n\n  // Enhanced markdown renderer for bot messages\n  const renderBotMessage = content => {\n    // Split content into sections (headings, paragraphs, code blocks)\n    const sections = content.split(/(```[\\s\\S]*?```|#{1,6}.*)/g);\n    return sections.map((section, index) => {\n      // Handle code blocks\n      if (section.startsWith('```')) {\n        var _section$match;\n        const codeContent = section.replace(/```(\\w+)?\\n?/, '').replace(/```$/, '');\n        const language = ((_section$match = section.match(/```(\\w+)/)) === null || _section$match === void 0 ? void 0 : _section$match[1]) || 'javascript';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-block-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code-block-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"code-language\",\n              children: language\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => copyToClipboard(codeContent),\n              className: \"copy-button\",\n              title: \"Copy code\",\n              children: /*#__PURE__*/_jsxDEV(Copy, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"code-block\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: codeContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this);\n      }\n\n      // Handle headings\n      if (section.startsWith('#')) {\n        const level = section.match(/^#{1,6}/)[0].length;\n        const text = section.replace(/^#{1,6}\\s*/, '');\n        const HeadingTag = `h${level}`;\n        return /*#__PURE__*/React.createElement(HeadingTag, {\n          key: index,\n          className: `heading-${level}`\n        }, text);\n      }\n\n      // Handle regular paragraphs\n      if (section.trim()) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"paragraph\",\n          children: section.trim()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this);\n      }\n      return null;\n    }).filter(Boolean);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-button\",\n          onClick: handleNewChat,\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), \"New chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-item ${chat.id === currentChatId ? \"active\" : \"\"}`,\n          onClick: () => handleSelectChat(chat.id),\n          children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n            size: 16,\n            className: \"chat-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), editingChatId === chat.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: tempTitle,\n              onChange: e => setTempTitle(e.target.value),\n              className: \"edit-title-input\",\n              autoFocus: true,\n              onKeyPress: e => {\n                if (e.key === 'Enter') saveEditedTitle(chat.id);\n                if (e.key === 'Escape') cancelEditing();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEditedTitle(chat.id),\n                className: \"save-btn\",\n                children: /*#__PURE__*/_jsxDEV(Check, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEditing,\n                className: \"cancel-btn\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-title\",\n              children: chat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), chat.id === currentChatId && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: e => {\n                e.stopPropagation();\n                startEditingTitle(chat.id, chat.title);\n              },\n              children: /*#__PURE__*/_jsxDEV(Edit3, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-area\",\n      children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: currentChat.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [currentChat.messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role === \"user\" ? \"user-message\" : \"bot-message\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: msg.role === \"user\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-text\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bot-text\",\n                children: [renderBotMessage(msg.content), msg.isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"typing-cursor\",\n                  children: \"|\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSend,\n            className: \"input-form\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Message ChatGPT...\",\n                value: input,\n                onChange: e => setInput(e.target.value),\n                disabled: isTyping,\n                className: \"message-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: !input.trim() || isTyping,\n                className: \"send-button\",\n                children: /*#__PURE__*/_jsxDEV(Send, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ChatGPT Clone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start a conversation by creating a new chat or selecting an existing one.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChat,\n            className: \"welcome-button\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), \"Start New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MeOgsSkMX97O1brfSVGWTVo3SnQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Copy","Send","Plus","Edit3","Check","X","MessageSquare","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","chats","setChats","currentChatId","setCurrentChatId","input","setInput","isTyping","setIsTyping","editingChatId","setEditingChatId","tempTitle","setTempTitle","messagesEndRef","currentChat","find","chat","id","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","messages","typeMessage","message","chatId","words","split","currentText","wordIndex","typeInterval","setInterval","length","prevChats","map","role","content","clearInterval","handleSend","e","preventDefault","trim","updatedChats","newChat","Date","now","title","substring","createdAt","userMessage","currentInput","botMessage","res","fetch","data","json","generated","err","console","error","errorMessage","handleNewChat","handleSelectChat","startEditingTitle","currentTitle","saveEditedTitle","cancelEditing","copyToClipboard","text","navigator","clipboard","writeText","then","log","renderBotMessage","sections","section","index","startsWith","_section$match","codeContent","replace","language","match","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","level","HeadingTag","createElement","key","filter","Boolean","type","value","onChange","target","autoFocus","onKeyPress","stopPropagation","msg","idx","ref","onSubmit","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Testing result/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Copy, Send, Plus, Edit3, Check, X, MessageSquare } from \"lucide-react\";\n\nfunction App() {\n  const [chats, setChats] = useState([]); // all chats\n  const [currentChatId, setCurrentChatId] = useState(null); // selected chat\n  const [input, setInput] = useState(\"\"); // current user input\n  const [isTyping, setIsTyping] = useState(false); // typing animation state\n  const [editingChatId, setEditingChatId] = useState(null); // chat being edited\n  const [tempTitle, setTempTitle] = useState(\"\"); // temporary title for editing\n  const messagesEndRef = useRef(null);\n\n  // Get current chat object\n  const currentChat = chats.find((chat) => chat.id === currentChatId);\n\n  // Auto scroll to bottom when new messages arrive\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [currentChat?.messages, isTyping]);\n\n  // Simulate typing animation\n  const typeMessage = (message, chatId) => {\n    setIsTyping(true);\n    const words = message.split(' ');\n    let currentText = '';\n    let wordIndex = 0;\n\n    const typeInterval = setInterval(() => {\n      if (wordIndex < words.length) {\n        currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n        \n        // Update the last message in real-time\n        setChats((prevChats) =>\n          prevChats.map((chat) => {\n            if (chat.id === chatId) {\n              const messages = [...chat.messages];\n              if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n                messages[messages.length - 1] = {\n                  ...messages[messages.length - 1],\n                  content: currentText,\n                  isTyping: true\n                };\n              }\n              return { ...chat, messages };\n            }\n            return chat;\n          })\n        );\n        \n        wordIndex++;\n      } else {\n        // Typing complete\n        setIsTyping(false);\n        setChats((prevChats) =>\n          prevChats.map((chat) => {\n            if (chat.id === chatId) {\n              const messages = [...chat.messages];\n              if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n                messages[messages.length - 1] = {\n                  ...messages[messages.length - 1],\n                  isTyping: false\n                };\n              }\n              return { ...chat, messages };\n            }\n            return chat;\n          })\n        );\n        clearInterval(typeInterval);\n      }\n    }, 50); // Adjust typing speed here\n  };\n\n  // Handle sending message\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!input.trim() || isTyping) return;\n\n    let chatId = currentChatId;\n    let updatedChats = [...chats];\n\n    // If no chat is selected, create a new one\n    if (!chatId) {\n      const newChat = {\n        id: Date.now(),\n        title: input.length > 30 ? input.substring(0, 30) + \"...\" : input,\n        messages: [],\n        createdAt: new Date()\n      };\n      updatedChats = [newChat, ...updatedChats];\n      chatId = newChat.id;\n      setCurrentChatId(chatId);\n    }\n\n    // Add user message\n    const userMessage = { role: \"user\", content: input.trim() };\n    updatedChats = updatedChats.map((chat) => {\n      if (chat.id === chatId) {\n        return { ...chat, messages: [...chat.messages, userMessage] };\n      }\n      return chat;\n    });\n\n    setChats(updatedChats);\n    const currentInput = input;\n    setInput(\"\");\n\n    // Add empty bot message for typing animation\n    const botMessage = { role: \"bot\", content: \"\", isTyping: true };\n    setChats((prevChats) =>\n      prevChats.map((chat) =>\n        chat.id === chatId ? { ...chat, messages: [...chat.messages, botMessage] } : chat\n      )\n    );\n\n    // Fetch response and start typing animation\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\");\n      const data = await res.json();\n      \n      // Start typing animation\n      typeMessage(data.generated, chatId);\n      \n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = { role: \"bot\", content: \"Sorry, I encountered an error while generating the response. Please try again.\", isTyping: false };\n      \n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = errorMessage;\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n    }\n  };\n\n  // Create a new chat manually\n  const handleNewChat = () => {\n    const newChat = { \n      id: Date.now(), \n      title: \"New Chat\", \n      messages: [],\n      createdAt: new Date()\n    };\n    setChats([newChat, ...chats]);\n    setCurrentChatId(newChat.id);\n    setInput(\"\");\n  };\n\n  // Select a chat from sidebar\n  const handleSelectChat = (id) => {\n    if (isTyping) return; // Prevent chat switching during typing\n    setCurrentChatId(id);\n    setInput(\"\");\n    setEditingChatId(null);\n  };\n\n  // Start editing chat title\n  const startEditingTitle = (id, currentTitle) => {\n    setEditingChatId(id);\n    setTempTitle(currentTitle);\n  };\n\n  // Save edited title\n  const saveEditedTitle = (id) => {\n    if (tempTitle.trim()) {\n      setChats((prevChats) =>\n        prevChats.map((chat) => (chat.id === id ? { ...chat, title: tempTitle.trim() } : chat))\n      );\n    }\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  // Cancel editing\n  const cancelEditing = () => {\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  // Copy code to clipboard\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text).then(() => {\n      // You could add a toast notification here\n      console.log(\"Code copied to clipboard!\");\n    });\n  };\n\n  // Enhanced markdown renderer for bot messages\n  const renderBotMessage = (content) => {\n    // Split content into sections (headings, paragraphs, code blocks)\n    const sections = content.split(/(```[\\s\\S]*?```|#{1,6}.*)/g);\n    \n    return sections.map((section, index) => {\n      // Handle code blocks\n      if (section.startsWith('```')) {\n        const codeContent = section.replace(/```(\\w+)?\\n?/, '').replace(/```$/, '');\n        const language = section.match(/```(\\w+)/)?.[1] || 'javascript';\n        \n        return (\n          <div key={index} className=\"code-block-container\">\n            <div className=\"code-block-header\">\n              <span className=\"code-language\">{language}</span>\n              <button\n                onClick={() => copyToClipboard(codeContent)}\n                className=\"copy-button\"\n                title=\"Copy code\"\n              >\n                <Copy size={16} />\n              </button>\n            </div>\n            <pre className=\"code-block\">\n              <code>{codeContent}</code>\n            </pre>\n          </div>\n        );\n      }\n      \n      // Handle headings\n      if (section.startsWith('#')) {\n        const level = section.match(/^#{1,6}/)[0].length;\n        const text = section.replace(/^#{1,6}\\s*/, '');\n        const HeadingTag = `h${level}`;\n        \n        return React.createElement(HeadingTag, {\n          key: index,\n          className: `heading-${level}`\n        }, text);\n      }\n      \n      // Handle regular paragraphs\n      if (section.trim()) {\n        return (\n          <p key={index} className=\"paragraph\">\n            {section.trim()}\n          </p>\n        );\n      }\n      \n      return null;\n    }).filter(Boolean);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {/* Sidebar */}\n      <div className=\"sidebar\">\n        <div className=\"sidebar-header\">\n          <button className=\"new-chat-button\" onClick={handleNewChat}>\n            <Plus size={16} />\n            New chat\n          </button>\n        </div>\n        \n        <div className=\"chat-list\">\n          {chats.map((chat) => (\n            <div\n              key={chat.id}\n              className={`chat-item ${chat.id === currentChatId ? \"active\" : \"\"}`}\n              onClick={() => handleSelectChat(chat.id)}\n            >\n              <MessageSquare size={16} className=\"chat-icon\" />\n              \n              {editingChatId === chat.id ? (\n                <div className=\"edit-title-container\">\n                  <input\n                    type=\"text\"\n                    value={tempTitle}\n                    onChange={(e) => setTempTitle(e.target.value)}\n                    className=\"edit-title-input\"\n                    autoFocus\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') saveEditedTitle(chat.id);\n                      if (e.key === 'Escape') cancelEditing();\n                    }}\n                  />\n                  <div className=\"edit-actions\">\n                    <button onClick={() => saveEditedTitle(chat.id)} className=\"save-btn\">\n                      <Check size={14} />\n                    </button>\n                    <button onClick={cancelEditing} className=\"cancel-btn\">\n                      <X size={14} />\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <span className=\"chat-title\">{chat.title}</span>\n                  {chat.id === currentChatId && (\n                    <button\n                      className=\"edit-button\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        startEditingTitle(chat.id, chat.title);\n                      }}\n                    >\n                      <Edit3 size={14} />\n                    </button>\n                  )}\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className=\"main-area\">\n        {currentChat ? (\n          <>\n            <div className=\"chat-header\">\n              <h1>{currentChat.title}</h1>\n            </div>\n            \n            <div className=\"messages-container\">\n              {currentChat.messages.map((msg, idx) => (\n                <div\n                  key={idx}\n                  className={`message ${msg.role === \"user\" ? \"user-message\" : \"bot-message\"}`}\n                >\n                  <div className=\"message-content\">\n                    {msg.role === \"user\" ? (\n                      <div className=\"user-text\">{msg.content}</div>\n                    ) : (\n                      <div className=\"bot-text\">\n                        {renderBotMessage(msg.content)}\n                        {msg.isTyping && <span className=\"typing-cursor\">|</span>}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n\n            <div className=\"input-container\">\n              <form onSubmit={handleSend} className=\"input-form\">\n                <div className=\"input-wrapper\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Message ChatGPT...\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    disabled={isTyping}\n                    className=\"message-input\"\n                  />\n                  <button\n                    type=\"submit\"\n                    disabled={!input.trim() || isTyping}\n                    className=\"send-button\"\n                  >\n                    <Send size={16} />\n                  </button>\n                </div>\n              </form>\n            </div>\n          </>\n        ) : (\n          <div className=\"welcome-screen\">\n            <div className=\"welcome-content\">\n              <h1>ChatGPT Clone</h1>\n              <p>Start a conversation by creating a new chat or selecting an existing one.</p>\n              <button onClick={handleNewChat} className=\"welcome-button\">\n                <Plus size={20} />\n                Start New Chat\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}