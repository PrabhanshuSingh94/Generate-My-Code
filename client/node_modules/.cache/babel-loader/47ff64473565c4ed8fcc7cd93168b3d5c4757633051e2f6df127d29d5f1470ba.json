{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Generate My Code/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Copy, Send, Plus, Edit3, Check, X, MessageSquare } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [editingChatId, setEditingChatId] = useState(null);\n  const [tempTitle, setTempTitle] = useState(\"\");\n  const [copySuccess, setCopySuccess] = useState({});\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [tempMessage, setTempMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // Get current chat object\n  const currentChat = chats.find(chat => chat.id === currentChatId);\n\n  // Auto scroll to bottom\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  // Auto-resize textarea\n  const adjustTextareaHeight = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = Math.min(textarea.scrollHeight, 200) + 'px';\n    }\n  };\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [input]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages, isTyping]);\n\n  // Copy to clipboard function\n  const copyToClipboard = async (text, codeBlockId) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopySuccess(prev => ({\n        ...prev,\n        [codeBlockId]: \"Copied!\"\n      }));\n      setTimeout(() => {\n        setCopySuccess(prev => {\n          const newState = {\n            ...prev\n          };\n          delete newState[codeBlockId];\n          return newState;\n        });\n      }, 2000);\n    } catch (err) {\n      console.error(\"Failed to copy: \", err);\n      setCopySuccess(prev => ({\n        ...prev,\n        [codeBlockId]: \"Failed to copy\"\n      }));\n      setTimeout(() => {\n        setCopySuccess(prev => {\n          const newState = {\n            ...prev\n          };\n          delete newState[codeBlockId];\n          return newState;\n        });\n      }, 2000);\n    }\n  };\n\n  // Simple and safe message renderer\n  // const renderBotMessage = (content, messageIndex) => {\n  //   if (!content) return \"\";\n\n  //   const contentStr = String(content);\n  //   const elements = [];\n  //   let currentIndex = 0;\n\n  //   // Find all code blocks first\n  //   const codeBlockRegex = /```(\\w+)?\\n?([\\s\\S]*?)```/g;\n  //   const headingRegex = /^(#{1,6})\\s+(.+)$/gm;\n\n  //   let lastIndex = 0;\n  //   let match;\n  //   let elementKey = 0;\n\n  //   // Process code blocks\n  //   while ((match = codeBlockRegex.exec(contentStr)) !== null) {\n  //     // Add text before code block\n  //     if (match.index > lastIndex) {\n  //       const textBefore = contentStr.substring(lastIndex, match.index).trim();\n  //       if (textBefore) {\n  //         elements.push(\n  //           <p key={`text-${elementKey++}`} className=\"mb-3 text-gray-800 leading-relaxed whitespace-pre-wrap\">\n  //             {textBefore}\n  //           </p>\n  //         );\n  //       }\n  //     }\n\n  //     // Add code block\n  //     const language = match[1] || 'javascript';\n  //     const code = match[2] || '';\n  //     const codeBlockId = `${messageIndex}-${elementKey}`;\n\n  //     elements.push(\n  //       <div key={`code-${elementKey++}`} className=\"my-4 border border-gray-300 rounded-lg overflow-hidden relative\">\n  //         <div className=\"flex justify-between items-center bg-gray-100 px-4 py-2 border-b border-gray-300\">\n  //           <span className=\"text-xs text-gray-600 font-medium\">{language}</span>\n  //           <div className=\"relative\">\n  //             <button\n  //               onClick={() => copyToClipboard(code, codeBlockId)}\n  //               className=\"flex items-center gap-1 px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded text-xs text-gray-700 transition-colors\"\n  //             >\n  //               <Copy size={12} />\n  //               Copy code\n  //             </button>\n  //             {copySuccess[codeBlockId] && (\n  //               <div className=\"absolute top-full right-0 mt-1 px-2 py-1 bg-gray-800 text-white text-xs rounded shadow-lg z-10\">\n  //                 {copySuccess[codeBlockId]}\n  //               </div>\n  //             )}\n  //           </div>\n  //         </div>\n  //         <pre className=\"bg-gray-900 text-green-400 p-4 overflow-x-auto m-0 font-mono text-sm leading-relaxed\">\n  //           <code>{code}</code>\n  //         </pre>\n  //       </div>\n  //     );\n\n  //     lastIndex = match.index + match[0].length;\n  //   }\n\n  //   // Add remaining text after last code block\n  //   if (lastIndex < contentStr.length) {\n  //     const remainingText = contentStr.substring(lastIndex).trim();\n  //     if (remainingText) {\n  //       // Process headings in remaining text\n  //       const lines = remainingText.split('\\n');\n  //       lines.forEach((line, lineIndex) => {\n  //         const headingMatch = line.match(/^(#{1,6})\\s+(.+)$/);\n  //         if (headingMatch) {\n  //           const level = headingMatch[1].length;\n  //           const text = headingMatch[2];\n  //           const headingClasses = {\n  //             1: \"text-2xl font-bold mt-6 mb-4 text-gray-900\",\n  //             2: \"text-xl font-bold mt-5 mb-3 text-gray-900\",\n  //             3: \"text-lg font-bold mt-4 mb-2 text-gray-900\",\n  //             4: \"text-base font-bold mt-3 mb-2 text-gray-900\",\n  //             5: \"text-sm font-bold mt-2 mb-1 text-gray-900\",\n  //             6: \"text-xs font-bold mt-2 mb-1 text-gray-900\"\n  //           };\n\n  //           elements.push(\n  //             React.createElement(\n  //               `h${level}`,\n  //               {\n  //                 key: `heading-${elementKey++}`,\n  //                 className: headingClasses[level] || headingClasses[1]\n  //               },\n  //               text\n  //             )\n  //           );\n  //         } else if (line.trim()) {\n  //           elements.push(\n  //             <p key={`line-${elementKey++}`} className=\"mb-3 text-gray-800 leading-relaxed\">\n  //               {line.trim()}\n  //             </p>\n  //           );\n  //         }\n  //       });\n  //     }\n  //   }\n\n  //   // If no elements were created, return the original text\n  //   if (elements.length === 0) {\n  //     return (\n  //       <p className=\"mb-3 text-gray-800 leading-relaxed whitespace-pre-wrap\">\n  //         {contentStr}\n  //       </p>\n  //     );\n  //   }\n\n  //   return <>{elements}</>;\n  // };\n  const renderBotMessage = (content, messageIndex) => {\n    if (!content) return null;\n    return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      children: content,\n      components: {\n        code({\n          node,\n          inline,\n          className,\n          children,\n          ...props\n        }) {\n          const language = className ? className.replace('language-', '') : 'javascript';\n          const codeBlockId = `${messageIndex}-${Math.random()}`;\n          return !inline ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-4 border border-gray-300 rounded-lg overflow-hidden relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center bg-gray-100 px-4 py-2 border-b border-gray-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-600 font-medium\",\n                children: language\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => copyToClipboard(children, codeBlockId),\n                  className: \"flex items-center gap-1 px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded text-xs text-gray-700 transition-colors\",\n                  children: [/*#__PURE__*/_jsxDEV(Copy, {\n                    size: 12\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this), \" Copy code\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), copySuccess[codeBlockId] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"absolute top-full right-0 mt-1 px-2 py-1 bg-gray-800 text-white text-xs rounded shadow-lg z-10\",\n                  children: copySuccess[codeBlockId]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"bg-gray-900 text-green-400 p-4 overflow-x-auto m-0 font-mono text-sm leading-relaxed\",\n              children: /*#__PURE__*/_jsxDEV(\"code\", {\n                children: children\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"bg-gray-200 px-1 rounded\",\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Typing animation function\n  // const typeMessage = (message, chatId) => {\n  //   setIsTyping(true);\n  //   const words = message.split(' ');\n  //   let currentText = '';\n  //   let wordIndex = 0;\n\n  //   const typeInterval = setInterval(() => {\n  //     if (wordIndex < words.length) {\n  //       currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n\n  //       setChats((prevChats) =>\n  //         prevChats.map((chat) => {\n  //           if (chat.id === chatId) {\n  //             const messages = [...chat.messages];\n  //             if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n  //               messages[messages.length - 1] = {\n  //                 ...messages[messages.length - 1],\n  //                 content: currentText,\n  //                 isTyping: true\n  //               };\n  //             }\n  //             return { ...chat, messages };\n  //           }\n  //           return chat;\n  //         })\n  //       );\n\n  //       wordIndex++;\n  //     } else {\n  //       setIsTyping(false);\n  //       setChats((prevChats) =>\n  //         prevChats.map((chat) => {\n  //           if (chat.id === chatId) {\n  //             const messages = [...chat.messages];\n  //             if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n  //               messages[messages.length - 1] = {\n  //                 ...messages[messages.length - 1],\n  //                 isTyping: false\n  //               };\n  //             }\n  //             return { ...chat, messages };\n  //           }\n  //           return chat;\n  //         })\n  //       );\n  //       clearInterval(typeInterval);\n  //     }\n  //   }, 50);\n  // };\n  const typeMessage = (message, chatId) => {\n    setIsTyping(true);\n\n    // Detect if the whole message is just a code block\n    const codeBlockRegex = /^```[\\s\\S]*```$/;\n    if (codeBlockRegex.test(message)) {\n      // Directly render full code block (no typing effect)\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = {\n            ...messages[messages.length - 1],\n            content: message,\n            isTyping: false\n          };\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n      setIsTyping(false);\n      return;\n    }\n\n    // Otherwise, do typing effect for normal text (headings, paragraphs, etc.)\n    const words = message.split(' ');\n    let currentText = '';\n    let wordIndex = 0;\n    const typeInterval = setInterval(() => {\n      if (wordIndex < words.length) {\n        currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n        setChats(prevChats => prevChats.map(chat => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n              messages[messages.length - 1] = {\n                ...messages[messages.length - 1],\n                content: currentText,\n                isTyping: true\n              };\n            }\n            return {\n              ...chat,\n              messages\n            };\n          }\n          return chat;\n        }));\n        wordIndex++;\n      } else {\n        setIsTyping(false);\n        clearInterval(typeInterval);\n      }\n    }, 50);\n  };\n\n  // Handle sending message\n  const handleSend = async () => {\n    if (!input.trim() || isTyping) return;\n    let chatId = currentChatId;\n    let updatedChats = [...chats];\n    if (!chatId) {\n      const newChat = {\n        id: Date.now(),\n        title: input.length > 40 ? input.substring(0, 40) + \"...\" : input.trim(),\n        messages: [],\n        createdAt: new Date()\n      };\n      updatedChats = [newChat, ...updatedChats];\n      chatId = newChat.id;\n      setCurrentChatId(chatId);\n    } else {\n      // Update existing chat title if it's still \"New Chat\"\n      const currentChat = updatedChats.find(chat => chat.id === chatId);\n      if (currentChat && currentChat.title === \"New Chat\") {\n        updatedChats = updatedChats.map(chat => chat.id === chatId ? {\n          ...chat,\n          title: input.length > 40 ? input.substring(0, 40) + \"...\" : input.trim()\n        } : chat);\n      }\n    }\n    const userMessage = {\n      role: \"user\",\n      content: input.trim()\n    };\n    updatedChats = updatedChats.map(chat => {\n      if (chat.id === chatId) {\n        return {\n          ...chat,\n          messages: [...chat.messages, userMessage]\n        };\n      }\n      return chat;\n    });\n    setChats(updatedChats);\n    setInput(\"\");\n    const botMessage = {\n      role: \"bot\",\n      content: \"\",\n      isTyping: true\n    };\n    setChats(prevChats => prevChats.map(chat => chat.id === chatId ? {\n      ...chat,\n      messages: [...chat.messages, botMessage]\n    } : chat));\n    // Start blinking animation\n    let blinkState = 0;\n    const blinkMessages = [\"Generating solution...\", \"Finding the best solution...\", \"Generating solution...\", \"Finding the best solution...\"];\n    const blinkInterval = setInterval(() => {\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = {\n            ...messages[messages.length - 1],\n            content: blinkMessages[blinkState % blinkMessages.length],\n            isTyping: true\n          };\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n      blinkState++;\n    }, 3000);\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: input.trim()\n        })\n      });\n      const data = await res.json();\n      clearInterval(blinkInterval);\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = errorMessage;\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleNewChat = () => {\n    const newChat = {\n      id: Date.now(),\n      title: \"New Chat\",\n      messages: [],\n      createdAt: new Date()\n    };\n    setChats([newChat, ...chats]);\n    setCurrentChatId(newChat.id);\n    setInput(\"\");\n  };\n  const handleSelectChat = id => {\n    if (isTyping) return;\n    setCurrentChatId(id);\n    setInput(\"\");\n    setEditingChatId(null);\n  };\n  const startEditingTitle = (id, currentTitle) => {\n    setEditingChatId(id);\n    setTempTitle(currentTitle);\n  };\n  const saveEditedTitle = id => {\n    if (tempTitle.trim()) {\n      setChats(prevChats => prevChats.map(chat => chat.id === id ? {\n        ...chat,\n        title: tempTitle.trim()\n      } : chat));\n    }\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n  const cancelEditing = () => {\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  // Message editing functions\n  const startEditingMessage = (messageIndex, content) => {\n    setEditingMessageId(messageIndex);\n    setTempMessage(content);\n  };\n  const saveEditedMessage = async messageIndex => {\n    if (!tempMessage.trim()) return;\n    const updatedChats = chats.map(chat => {\n      if (chat.id === currentChatId) {\n        const messages = [...chat.messages];\n        messages[messageIndex] = {\n          ...messages[messageIndex],\n          content: tempMessage.trim()\n        };\n        const newMessages = messages.slice(0, messageIndex + 1);\n        return {\n          ...chat,\n          messages: newMessages\n        };\n      }\n      return chat;\n    });\n    setChats(updatedChats);\n    setEditingMessageId(null);\n    setTempMessage(\"\");\n    const chatId = currentChatId;\n    const botMessage = {\n      role: \"bot\",\n      content: \"Generate solution...\",\n      isTyping: true\n    };\n    setChats(prevChats => prevChats.map(chat => chat.id === chatId ? {\n      ...chat,\n      messages: [...chat.messages, botMessage]\n    } : chat));\n    let blinkState = 0;\n    const blinkMessages = [\"Generating solution...\", \"Finding the best solution...\", \"Generating solution...\", \"Finding the best solution...\"];\n    const blinkInterval = setInterval(() => {\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = {\n            ...messages[messages.length - 1],\n            content: blinkMessages[blinkState % blinkMessages.length],\n            isTyping: true\n          };\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n      blinkState++;\n    }, 3000);\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: tempMessage.trim()\n        })\n      });\n      const data = await res.json();\n      clearInterval(blinkInterval);\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n      setChats(prevChats => prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = errorMessage;\n          return {\n            ...chat,\n            messages\n          };\n        }\n        return chat;\n      }));\n    }\n  };\n  const cancelMessageEditing = () => {\n    setEditingMessageId(null);\n    setTempMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen bg-white text-gray-900 flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-64 h-screen overflow-y-auto bg-gray-900 text-white flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewChat,\n          className: \"w-full flex items-center justify-center gap-2 px-4 py-3 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), \"New chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto px-2\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `group flex items-center gap-3 p-3 rounded-lg cursor-pointer transition-colors mb-1 ${chat.id === currentChatId ? \"bg-gray-800\" : \"hover:bg-gray-800\"}`,\n          onClick: () => handleSelectChat(chat.id),\n          children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n            size: 16,\n            className: \"text-gray-400 flex-shrink-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), editingChatId === chat.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: tempTitle,\n              onChange: e => setTempTitle(e.target.value),\n              className: \"flex-1 bg-gray-700 text-white px-2 py-1 rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              autoFocus: true,\n              onKeyDown: e => {\n                if (e.key === 'Enter') saveEditedTitle(chat.id);\n                if (e.key === 'Escape') cancelEditing();\n              },\n              onBlur: () => saveEditedTitle(chat.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => saveEditedTitle(chat.id),\n              className: \"text-green-400 hover:text-green-300 p-1\",\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelEditing,\n              className: \"text-red-400 hover:text-red-300 p-1\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex-1 truncate text-sm cursor-pointer\",\n              onDoubleClick: () => startEditingTitle(chat.id, chat.title),\n              children: chat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 19\n            }, this), chat.id === currentChatId && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"opacity-0 group-hover:opacity-100 text-gray-400 hover:text-white transition-opacity p-1\",\n              onClick: e => {\n                e.stopPropagation();\n                startEditingTitle(chat.id, chat.title);\n              },\n              children: /*#__PURE__*/_jsxDEV(Edit3, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen overflow-y-auto flex-1 flex flex-col\",\n      children: currentChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-b border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-lg font-medium\",\n            children: currentChat.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-6 space-y-4\",\n          children: [currentChat.messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-none\",\n            children: msg.role === \"user\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end mb-4 group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-w-2xl relative\",\n                children: editingMessageId === idx ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-blue-600 text-white px-4 py-3 rounded-3xl rounded-br-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: tempMessage,\n                    onChange: e => setTempMessage(e.target.value),\n                    className: \"w-full bg-transparent text-white resize-none border-none outline-none\",\n                    rows: Math.max(1, tempMessage.split('\\n').length),\n                    autoFocus: true,\n                    onKeyDown: e => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        saveEditedMessage(idx);\n                      }\n                      if (e.key === 'Escape') {\n                        cancelMessageEditing();\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2 mt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => saveEditedMessage(idx),\n                      className: \"px-3 py-1 bg-white bg-opacity-20 text-white rounded-full text-xs hover:bg-opacity-30 transition-colors\",\n                      children: /*#__PURE__*/_jsxDEV(Check, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 693,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: cancelMessageEditing,\n                      className: \"px-3 py-1 bg-white bg-opacity-20 text-white rounded-full text-xs hover:bg-opacity-30 transition-colors\",\n                      children: /*#__PURE__*/_jsxDEV(X, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 699,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-blue-600 text-white px-4 py-3 rounded-3xl rounded-br-md text-sm leading-relaxed\",\n                    children: msg.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditingMessage(idx, msg.content),\n                    className: \"absolute -bottom-8 right-0 opacity-0 group-hover:opacity-100 text-gray-400 hover:text-gray-600 transition-all duration-200 text-xs\",\n                    children: /*#__PURE__*/_jsxDEV(Edit3, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-start mb-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"max-w-4xl w-full\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 px-4 py-3 rounded-3xl rounded-bl-md\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"prose prose-sm max-w-none text-sm\",\n                    children: [renderBotMessage(msg.content, idx), msg.isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"inline-block w-2 h-5 bg-gray-900 animate-pulse ml-1\",\n                      children: \"|\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 722,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 21\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-t border-gray-200 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-w-4xl mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-end gap-2 bg-gray-50 rounded-3xl px-4 py-2 border border-gray-200 shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: textareaRef,\n                value: input,\n                onChange: e => setInput(e.target.value),\n                onKeyDown: handleKeyPress,\n                placeholder: \"Message Alien...\",\n                disabled: isTyping,\n                className: \"flex-1 bg-transparent py-2 resize-none border-none outline-none min-h-6 max-h-48 text-gray-900 placeholder-gray-500\",\n                rows: 1,\n                style: {\n                  overflow: 'hidden'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSend,\n                disabled: !input.trim() || isTyping,\n                className: `p-2 rounded-full transition-all duration-200 ${!input.trim() || isTyping ? \"bg-gray-200 text-gray-400 cursor-not-allowed\" : \"bg-gray-900 text-white hover:bg-gray-700 shadow-sm\"}`,\n                children: /*#__PURE__*/_jsxDEV(Send, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold text-gray-900\",\n            children: \"ChatGPT Clone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-lg max-w-md\",\n            children: \"Start a conversation by creating a new chat or selecting an existing one.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewChat,\n            className: \"inline-flex items-center gap-2 bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this), \"Start New Chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 580,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3lRzcqg/EjQppuStrL1uRAt2vk0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Copy","Send","Plus","Edit3","Check","X","MessageSquare","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","chats","setChats","currentChatId","setCurrentChatId","input","setInput","isTyping","setIsTyping","editingChatId","setEditingChatId","tempTitle","setTempTitle","copySuccess","setCopySuccess","editingMessageId","setEditingMessageId","tempMessage","setTempMessage","messagesEndRef","textareaRef","currentChat","find","chat","id","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","adjustTextareaHeight","textarea","style","height","Math","min","scrollHeight","messages","copyToClipboard","text","codeBlockId","navigator","clipboard","writeText","prev","setTimeout","newState","err","console","error","renderBotMessage","content","messageIndex","ReactMarkdown","children","components","code","node","inline","className","props","language","replace","random","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","typeMessage","message","chatId","codeBlockRegex","test","prevChats","map","length","words","split","currentText","wordIndex","typeInterval","setInterval","role","clearInterval","handleSend","trim","updatedChats","newChat","Date","now","title","substring","createdAt","userMessage","botMessage","blinkState","blinkMessages","blinkInterval","res","fetch","method","headers","body","JSON","stringify","prompt","data","json","generated","errorMessage","handleKeyPress","e","key","shiftKey","preventDefault","handleNewChat","handleSelectChat","startEditingTitle","currentTitle","saveEditedTitle","cancelEditing","startEditingMessage","saveEditedMessage","newMessages","slice","cancelMessageEditing","type","value","onChange","target","autoFocus","onKeyDown","onBlur","onDoubleClick","stopPropagation","msg","idx","rows","max","ref","placeholder","disabled","overflow","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Generate My Code/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Copy, Send, Plus, Edit3, Check, X, MessageSquare } from \"lucide-react\";\n\nfunction App() {\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [editingChatId, setEditingChatId] = useState(null);\n  const [tempTitle, setTempTitle] = useState(\"\");\n  const [copySuccess, setCopySuccess] = useState({});\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [tempMessage, setTempMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // Get current chat object\n  const currentChat = chats.find((chat) => chat.id === currentChatId);\n\n  // Auto scroll to bottom\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  // Auto-resize textarea\n  const adjustTextareaHeight = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = Math.min(textarea.scrollHeight, 200) + 'px';\n    }\n  };\n\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [input]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [currentChat?.messages, isTyping]);\n\n  // Copy to clipboard function\n  const copyToClipboard = async (text, codeBlockId) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopySuccess(prev => ({ ...prev, [codeBlockId]: \"Copied!\" }));\n      setTimeout(() => {\n        setCopySuccess(prev => {\n          const newState = { ...prev };\n          delete newState[codeBlockId];\n          return newState;\n        });\n      }, 2000);\n    } catch (err) {\n      console.error(\"Failed to copy: \", err);\n      setCopySuccess(prev => ({ ...prev, [codeBlockId]: \"Failed to copy\" }));\n      setTimeout(() => {\n        setCopySuccess(prev => {\n          const newState = { ...prev };\n          delete newState[codeBlockId];\n          return newState;\n        });\n      }, 2000);\n    }\n  };\n\n  // Simple and safe message renderer\n  // const renderBotMessage = (content, messageIndex) => {\n  //   if (!content) return \"\";\n\n  //   const contentStr = String(content);\n  //   const elements = [];\n  //   let currentIndex = 0;\n\n  //   // Find all code blocks first\n  //   const codeBlockRegex = /```(\\w+)?\\n?([\\s\\S]*?)```/g;\n  //   const headingRegex = /^(#{1,6})\\s+(.+)$/gm;\n\n  //   let lastIndex = 0;\n  //   let match;\n  //   let elementKey = 0;\n\n  //   // Process code blocks\n  //   while ((match = codeBlockRegex.exec(contentStr)) !== null) {\n  //     // Add text before code block\n  //     if (match.index > lastIndex) {\n  //       const textBefore = contentStr.substring(lastIndex, match.index).trim();\n  //       if (textBefore) {\n  //         elements.push(\n  //           <p key={`text-${elementKey++}`} className=\"mb-3 text-gray-800 leading-relaxed whitespace-pre-wrap\">\n  //             {textBefore}\n  //           </p>\n  //         );\n  //       }\n  //     }\n\n  //     // Add code block\n  //     const language = match[1] || 'javascript';\n  //     const code = match[2] || '';\n  //     const codeBlockId = `${messageIndex}-${elementKey}`;\n\n  //     elements.push(\n  //       <div key={`code-${elementKey++}`} className=\"my-4 border border-gray-300 rounded-lg overflow-hidden relative\">\n  //         <div className=\"flex justify-between items-center bg-gray-100 px-4 py-2 border-b border-gray-300\">\n  //           <span className=\"text-xs text-gray-600 font-medium\">{language}</span>\n  //           <div className=\"relative\">\n  //             <button\n  //               onClick={() => copyToClipboard(code, codeBlockId)}\n  //               className=\"flex items-center gap-1 px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded text-xs text-gray-700 transition-colors\"\n  //             >\n  //               <Copy size={12} />\n  //               Copy code\n  //             </button>\n  //             {copySuccess[codeBlockId] && (\n  //               <div className=\"absolute top-full right-0 mt-1 px-2 py-1 bg-gray-800 text-white text-xs rounded shadow-lg z-10\">\n  //                 {copySuccess[codeBlockId]}\n  //               </div>\n  //             )}\n  //           </div>\n  //         </div>\n  //         <pre className=\"bg-gray-900 text-green-400 p-4 overflow-x-auto m-0 font-mono text-sm leading-relaxed\">\n  //           <code>{code}</code>\n  //         </pre>\n  //       </div>\n  //     );\n\n  //     lastIndex = match.index + match[0].length;\n  //   }\n\n  //   // Add remaining text after last code block\n  //   if (lastIndex < contentStr.length) {\n  //     const remainingText = contentStr.substring(lastIndex).trim();\n  //     if (remainingText) {\n  //       // Process headings in remaining text\n  //       const lines = remainingText.split('\\n');\n  //       lines.forEach((line, lineIndex) => {\n  //         const headingMatch = line.match(/^(#{1,6})\\s+(.+)$/);\n  //         if (headingMatch) {\n  //           const level = headingMatch[1].length;\n  //           const text = headingMatch[2];\n  //           const headingClasses = {\n  //             1: \"text-2xl font-bold mt-6 mb-4 text-gray-900\",\n  //             2: \"text-xl font-bold mt-5 mb-3 text-gray-900\",\n  //             3: \"text-lg font-bold mt-4 mb-2 text-gray-900\",\n  //             4: \"text-base font-bold mt-3 mb-2 text-gray-900\",\n  //             5: \"text-sm font-bold mt-2 mb-1 text-gray-900\",\n  //             6: \"text-xs font-bold mt-2 mb-1 text-gray-900\"\n  //           };\n\n  //           elements.push(\n  //             React.createElement(\n  //               `h${level}`,\n  //               {\n  //                 key: `heading-${elementKey++}`,\n  //                 className: headingClasses[level] || headingClasses[1]\n  //               },\n  //               text\n  //             )\n  //           );\n  //         } else if (line.trim()) {\n  //           elements.push(\n  //             <p key={`line-${elementKey++}`} className=\"mb-3 text-gray-800 leading-relaxed\">\n  //               {line.trim()}\n  //             </p>\n  //           );\n  //         }\n  //       });\n  //     }\n  //   }\n\n  //   // If no elements were created, return the original text\n  //   if (elements.length === 0) {\n  //     return (\n  //       <p className=\"mb-3 text-gray-800 leading-relaxed whitespace-pre-wrap\">\n  //         {contentStr}\n  //       </p>\n  //     );\n  //   }\n\n  //   return <>{elements}</>;\n  // };\n   const renderBotMessage = (content, messageIndex) => {\n    if (!content) return null;\n\n    return (\n      <ReactMarkdown\n        children={content}\n        components={{\n          code({node, inline, className, children, ...props}) {\n            const language = className ? className.replace('language-', '') : 'javascript';\n            const codeBlockId = `${messageIndex}-${Math.random()}`;\n            return !inline ? (\n              <div className=\"my-4 border border-gray-300 rounded-lg overflow-hidden relative\">\n                <div className=\"flex justify-between items-center bg-gray-100 px-4 py-2 border-b border-gray-300\">\n                  <span className=\"text-xs text-gray-600 font-medium\">{language}</span>\n                  <div className=\"relative\">\n                    <button\n                      onClick={() => copyToClipboard(children, codeBlockId)}\n                      className=\"flex items-center gap-1 px-2 py-1 bg-gray-200 hover:bg-gray-300 rounded text-xs text-gray-700 transition-colors\"\n                    >\n                      <Copy size={12} /> Copy code\n                    </button>\n                    {copySuccess[codeBlockId] && (\n                      <div className=\"absolute top-full right-0 mt-1 px-2 py-1 bg-gray-800 text-white text-xs rounded shadow-lg z-10\">\n                        {copySuccess[codeBlockId]}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <pre className=\"bg-gray-900 text-green-400 p-4 overflow-x-auto m-0 font-mono text-sm leading-relaxed\">\n                  <code>{children}</code>\n                </pre>\n              </div>\n            ) : (\n              <code className=\"bg-gray-200 px-1 rounded\">{children}</code>\n            );\n          }\n        }}\n      />\n    );\n  };\n\n\n  // Typing animation function\n  // const typeMessage = (message, chatId) => {\n  //   setIsTyping(true);\n  //   const words = message.split(' ');\n  //   let currentText = '';\n  //   let wordIndex = 0;\n\n  //   const typeInterval = setInterval(() => {\n  //     if (wordIndex < words.length) {\n  //       currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n\n  //       setChats((prevChats) =>\n  //         prevChats.map((chat) => {\n  //           if (chat.id === chatId) {\n  //             const messages = [...chat.messages];\n  //             if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n  //               messages[messages.length - 1] = {\n  //                 ...messages[messages.length - 1],\n  //                 content: currentText,\n  //                 isTyping: true\n  //               };\n  //             }\n  //             return { ...chat, messages };\n  //           }\n  //           return chat;\n  //         })\n  //       );\n\n  //       wordIndex++;\n  //     } else {\n  //       setIsTyping(false);\n  //       setChats((prevChats) =>\n  //         prevChats.map((chat) => {\n  //           if (chat.id === chatId) {\n  //             const messages = [...chat.messages];\n  //             if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n  //               messages[messages.length - 1] = {\n  //                 ...messages[messages.length - 1],\n  //                 isTyping: false\n  //               };\n  //             }\n  //             return { ...chat, messages };\n  //           }\n  //           return chat;\n  //         })\n  //       );\n  //       clearInterval(typeInterval);\n  //     }\n  //   }, 50);\n  // };\n const typeMessage = (message, chatId) => {\n  setIsTyping(true);\n\n  // Detect if the whole message is just a code block\n  const codeBlockRegex = /^```[\\s\\S]*```$/;\n\n  if (codeBlockRegex.test(message)) {\n    // Directly render full code block (no typing effect)\n    setChats(prevChats =>\n      prevChats.map(chat => {\n        if (chat.id === chatId) {\n          const messages = [...chat.messages];\n          messages[messages.length - 1] = {\n            ...messages[messages.length - 1],\n            content: message,\n            isTyping: false\n          };\n          return { ...chat, messages };\n        }\n        return chat;\n      })\n    );\n    setIsTyping(false);\n    return;\n  }\n\n  // Otherwise, do typing effect for normal text (headings, paragraphs, etc.)\n  const words = message.split(' ');\n  let currentText = '';\n  let wordIndex = 0;\n\n  const typeInterval = setInterval(() => {\n    if (wordIndex < words.length) {\n      currentText += (wordIndex > 0 ? ' ' : '') + words[wordIndex];\n\n      setChats(prevChats =>\n        prevChats.map(chat => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            if (messages.length > 0 && messages[messages.length - 1].role === \"bot\") {\n              messages[messages.length - 1] = {\n                ...messages[messages.length - 1],\n                content: currentText,\n                isTyping: true\n              };\n            }\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n\n      wordIndex++;\n    } else {\n      setIsTyping(false);\n      clearInterval(typeInterval);\n    }\n  }, 50);\n};\n\n\n\n  // Handle sending message\n  const handleSend = async () => {\n    if (!input.trim() || isTyping) return;\n\n    let chatId = currentChatId;\n    let updatedChats = [...chats];\n\n    if (!chatId) {\n      const newChat = {\n        id: Date.now(),\n        title: input.length > 40 ? input.substring(0, 40) + \"...\" : input.trim(),\n        messages: [],\n        createdAt: new Date()\n      };\n      updatedChats = [newChat, ...updatedChats];\n      chatId = newChat.id;\n      setCurrentChatId(chatId);\n    } else {\n      // Update existing chat title if it's still \"New Chat\"\n      const currentChat = updatedChats.find(chat => chat.id === chatId);\n      if (currentChat && currentChat.title === \"New Chat\") {\n        updatedChats = updatedChats.map(chat =>\n          chat.id === chatId\n            ? { ...chat, title: input.length > 40 ? input.substring(0, 40) + \"...\" : input.trim() }\n            : chat\n        );\n      }\n    }\n\n    const userMessage = { role: \"user\", content: input.trim() };\n    updatedChats = updatedChats.map((chat) => {\n      if (chat.id === chatId) {\n        return { ...chat, messages: [...chat.messages, userMessage] };\n      }\n      return chat;\n    });\n\n    setChats(updatedChats);\n    setInput(\"\");\n\n    const botMessage = { role: \"bot\", content: \"\", isTyping: true };\n    setChats((prevChats) =>\n      prevChats.map((chat) =>\n        chat.id === chatId ? { ...chat, messages: [...chat.messages, botMessage] } : chat\n      )\n    );\n    // Start blinking animation\n    let blinkState = 0;\n    const blinkMessages = [\n      \"Generating solution...\",\n      \"Finding the best solution...\",\n      \"Generating solution...\",\n      \"Finding the best solution...\"\n    ];\n\n    const blinkInterval = setInterval(() => {\n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = {\n              ...messages[messages.length - 1],\n              content: blinkMessages[blinkState % blinkMessages.length],\n              isTyping: true\n            };\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n      blinkState++;\n    }, 3000);\n\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: input.trim() })\n      });\n      const data = await res.json();\n      clearInterval(blinkInterval);\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n\n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = errorMessage;\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleNewChat = () => {\n    const newChat = {\n      id: Date.now(),\n      title: \"New Chat\",\n      messages: [],\n      createdAt: new Date()\n    };\n    setChats([newChat, ...chats]);\n    setCurrentChatId(newChat.id);\n    setInput(\"\");\n  };\n\n  const handleSelectChat = (id) => {\n    if (isTyping) return;\n    setCurrentChatId(id);\n    setInput(\"\");\n    setEditingChatId(null);\n  };\n\n  const startEditingTitle = (id, currentTitle) => {\n    setEditingChatId(id);\n    setTempTitle(currentTitle);\n  };\n\n  const saveEditedTitle = (id) => {\n    if (tempTitle.trim()) {\n      setChats((prevChats) =>\n        prevChats.map((chat) => (chat.id === id ? { ...chat, title: tempTitle.trim() } : chat))\n      );\n    }\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  const cancelEditing = () => {\n    setEditingChatId(null);\n    setTempTitle(\"\");\n  };\n\n  // Message editing functions\n  const startEditingMessage = (messageIndex, content) => {\n    setEditingMessageId(messageIndex);\n    setTempMessage(content);\n  };\n\n  const saveEditedMessage = async (messageIndex) => {\n    if (!tempMessage.trim()) return;\n\n    const updatedChats = chats.map((chat) => {\n      if (chat.id === currentChatId) {\n        const messages = [...chat.messages];\n        messages[messageIndex] = { ...messages[messageIndex], content: tempMessage.trim() };\n        const newMessages = messages.slice(0, messageIndex + 1);\n        return { ...chat, messages: newMessages };\n      }\n      return chat;\n    });\n\n    setChats(updatedChats);\n    setEditingMessageId(null);\n    setTempMessage(\"\");\n\n    const chatId = currentChatId;\n    const botMessage = { role: \"bot\", content: \"Generate solution...\", isTyping: true };\n    setChats((prevChats) =>\n      prevChats.map((chat) =>\n        chat.id === chatId ? { ...chat, messages: [...chat.messages, botMessage] } : chat\n      )\n    );\n\n    let blinkState = 0;\n    const blinkMessages = [\n      \"Generating solution...\",\n      \"Finding the best solution...\",\n      \"Generating solution...\",\n      \"Finding the best solution...\"\n    ];\n\n    const blinkInterval = setInterval(() => {\n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = {\n              ...messages[messages.length - 1],\n              content: blinkMessages[blinkState % blinkMessages.length],\n              isTyping: true\n            };\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n      blinkState++;\n    }, 3000);\n\n    try {\n      const res = await fetch(\"http://localhost:3000/api/generate\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ prompt: tempMessage.trim() })\n      });\n      const data = await res.json();\n      clearInterval(blinkInterval);\n      typeMessage(data.generated, chatId);\n    } catch (err) {\n      console.error(\"Error fetching response:\", err);\n      setIsTyping(false);\n      const errorMessage = {\n        role: \"bot\",\n        content: \"Sorry, I encountered an error while generating the response. Please try again.\",\n        isTyping: false\n      };\n\n      setChats((prevChats) =>\n        prevChats.map((chat) => {\n          if (chat.id === chatId) {\n            const messages = [...chat.messages];\n            messages[messages.length - 1] = errorMessage;\n            return { ...chat, messages };\n          }\n          return chat;\n        })\n      );\n    }\n  };\n\n  const cancelMessageEditing = () => {\n    setEditingMessageId(null);\n    setTempMessage(\"\");\n  };\n\n  return (\n    <div className=\"h-screen bg-white text-gray-900 flex\">\n      {/* Sidebar */}\n      <div className=\"w-64 h-screen overflow-y-auto bg-gray-900 text-white flex flex-col\">\n        <div className=\"p-4\">\n          <button\n            onClick={handleNewChat}\n            className=\"w-full flex items-center justify-center gap-2 px-4 py-3 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors\"\n          >\n            <Plus size={16} />\n            New chat\n          </button>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto px-2\">\n          {chats.map((chat) => (\n            <div\n              key={chat.id}\n              className={`group flex items-center gap-3 p-3 rounded-lg cursor-pointer transition-colors mb-1 ${chat.id === currentChatId ? \"bg-gray-800\" : \"hover:bg-gray-800\"\n                }`}\n              onClick={() => handleSelectChat(chat.id)}\n            >\n              <MessageSquare size={16} className=\"text-gray-400 flex-shrink-0\" />\n\n              {editingChatId === chat.id ? (\n                <div className=\"flex-1 flex items-center gap-2\">\n                  <input\n                    type=\"text\"\n                    value={tempTitle}\n                    onChange={(e) => setTempTitle(e.target.value)}\n                    className=\"flex-1 bg-gray-700 text-white px-2 py-1 rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    autoFocus\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') saveEditedTitle(chat.id);\n                      if (e.key === 'Escape') cancelEditing();\n                    }}\n                    onBlur={() => saveEditedTitle(chat.id)}\n                  />\n                  <button\n                    onClick={() => saveEditedTitle(chat.id)}\n                    className=\"text-green-400 hover:text-green-300 p-1\"\n                  >\n                    <Check size={14} />\n                  </button>\n                  <button\n                    onClick={cancelEditing}\n                    className=\"text-red-400 hover:text-red-300 p-1\"\n                  >\n                    <X size={14} />\n                  </button>\n                </div>\n              ) : (\n                <>\n                  <span\n                    className=\"flex-1 truncate text-sm cursor-pointer\"\n                    onDoubleClick={() => startEditingTitle(chat.id, chat.title)}\n                  >\n                    {chat.title}\n                  </span>\n                  {chat.id === currentChatId && (\n                    <button\n                      className=\"opacity-0 group-hover:opacity-100 text-gray-400 hover:text-white transition-opacity p-1\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        startEditingTitle(chat.id, chat.title);\n                      }}\n                    >\n                      <Edit3 size={14} />\n                    </button>\n                  )}\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className=\"h-screen overflow-y-auto flex-1 flex flex-col\">\n        {currentChat ? (\n          <>\n            <div className=\"border-b border-gray-200 p-4\">\n              <h1 className=\"text-lg font-medium\">{currentChat.title}</h1>\n            </div>\n\n            <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\n              {currentChat.messages.map((msg, idx) => (\n                <div key={idx} className=\"max-w-none\">\n                  {msg.role === \"user\" ? (\n                    <div className=\"flex justify-end mb-4 group\">\n                      <div className=\"max-w-2xl relative\">\n                        {editingMessageId === idx ? (\n                          <div className=\"bg-blue-600 text-white px-4 py-3 rounded-3xl rounded-br-md\">\n                            <textarea\n                              value={tempMessage}\n                              onChange={(e) => setTempMessage(e.target.value)}\n                              className=\"w-full bg-transparent text-white resize-none border-none outline-none\"\n                              rows={Math.max(1, tempMessage.split('\\n').length)}\n                              autoFocus\n                              onKeyDown={(e) => {\n                                if (e.key === 'Enter' && !e.shiftKey) {\n                                  e.preventDefault();\n                                  saveEditedMessage(idx);\n                                }\n                                if (e.key === 'Escape') {\n                                  cancelMessageEditing();\n                                }\n                              }}\n                            />\n                            <div className=\"flex gap-2 mt-2\">\n                              <button\n                                onClick={() => saveEditedMessage(idx)}\n                                className=\"px-3 py-1 bg-white bg-opacity-20 text-white rounded-full text-xs hover:bg-opacity-30 transition-colors\"\n                              >\n                                <Check size={12} />\n                              </button>\n                              <button\n                                onClick={cancelMessageEditing}\n                                className=\"px-3 py-1 bg-white bg-opacity-20 text-white rounded-full text-xs hover:bg-opacity-30 transition-colors\"\n                              >\n                                <X size={12} />\n                              </button>\n                            </div>\n                          </div>\n                        ) : (\n                          <>\n                            <div className=\"bg-blue-600 text-white px-4 py-3 rounded-3xl rounded-br-md text-sm leading-relaxed\">\n                              {msg.content}\n                            </div>\n                            <button\n                              onClick={() => startEditingMessage(idx, msg.content)}\n                              className=\"absolute -bottom-8 right-0 opacity-0 group-hover:opacity-100 text-gray-400 hover:text-gray-600 transition-all duration-200 text-xs\"\n                            >\n                              <Edit3 size={14} />\n                            </button>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"flex justify-start mb-4\">\n                      <div className=\"max-w-4xl w-full\">\n                        <div className=\"bg-gray-50 px-4 py-3 rounded-3xl rounded-bl-md\">\n                          <div className=\"prose prose-sm max-w-none text-sm\">\n                            {renderBotMessage(msg.content, idx)}\n                            {msg.isTyping && (\n                              <span className=\"inline-block w-2 h-5 bg-gray-900 animate-pulse ml-1\">|</span>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n\n            <div className=\"border-t border-gray-200 p-4\">\n              <div className=\"max-w-4xl mx-auto\">\n                <div className=\"flex items-end gap-2 bg-gray-50 rounded-3xl px-4 py-2 border border-gray-200 shadow-sm\">\n                  <textarea\n                    ref={textareaRef}\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    onKeyDown={handleKeyPress}\n                    placeholder=\"Message Alien...\"\n                    disabled={isTyping}\n                    className=\"flex-1 bg-transparent py-2 resize-none border-none outline-none min-h-6 max-h-48 text-gray-900 placeholder-gray-500\"\n                    rows={1}\n                    style={{ overflow: 'hidden' }}\n                  />\n                  <button\n                    onClick={handleSend}\n                    disabled={!input.trim() || isTyping}\n                    className={`p-2 rounded-full transition-all duration-200 ${!input.trim() || isTyping\n                        ? \"bg-gray-200 text-gray-400 cursor-not-allowed\"\n                        : \"bg-gray-900 text-white hover:bg-gray-700 shadow-sm\"\n                      }`}\n                  >\n                    <Send size={18} />\n                  </button>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center\">\n            <div className=\"text-center space-y-6\">\n              <h1 className=\"text-4xl font-bold text-gray-900\">ChatGPT Clone</h1>\n              <p className=\"text-gray-600 text-lg max-w-md\">\n                Start a conversation by creating a new chat or selecting an existing one.\n              </p>\n              <button\n                onClick={handleNewChat}\n                className=\"inline-flex items-center gap-2 bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition-colors\"\n              >\n                <Plus size={20} />\n                Start New Chat\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}