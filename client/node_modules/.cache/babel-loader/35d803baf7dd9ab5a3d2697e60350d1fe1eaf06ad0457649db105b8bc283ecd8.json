{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Testing result/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { materialLight } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [input, setInput] = useState(\"\");\n\n  // Load chats from localStorage\n  useEffect(() => {\n    const storedChats = JSON.parse(localStorage.getItem(\"chats\")) || [];\n    setChats(storedChats);\n    if (storedChats.length > 0) setCurrentChatId(storedChats[0].id);\n  }, []);\n\n  // Save chats to localStorage whenever chats change\n  useEffect(() => {\n    localStorage.setItem(\"chats\", JSON.stringify(chats));\n  }, [chats]);\n  const handleNewChat = () => {\n    const newChat = {\n      id: Date.now(),\n      title: \"New Chat\",\n      messages: []\n    };\n    setChats([newChat, ...chats]);\n    setCurrentChatId(newChat.id);\n    setInput(\"\");\n  };\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!input) return;\n\n    // Update current chat messages with user input\n    const updatedChats = chats.map(chat => {\n      if (chat.id === currentChatId) {\n        return {\n          ...chat,\n          messages: [...chat.messages, {\n            role: \"user\",\n            content: input\n          }]\n        };\n      }\n      return chat;\n    });\n    setChats(updatedChats);\n    setInput(\"\");\n\n    // Fetch response from server (static for now)\n    try {\n      const res = await axios.get(\"http://localhost:3000/api/generate\"); // staticResponse\n      const botMessage = {\n        role: \"bot\",\n        content: res.data.generated\n      };\n      setChats(prevChats => prevChats.map(chat => chat.id === currentChatId ? {\n        ...chat,\n        messages: [...chat.messages, botMessage]\n      } : chat));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const currentChat = chats.find(chat => chat.id === currentChatId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat\",\n        onClick: handleNewChat,\n        children: \"+ New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chat-list\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: chat.id === currentChatId ? \"active\" : \"\",\n          onClick: () => setCurrentChatId(chat.id),\n          children: chat.title || \"Untitled Chat\"\n        }, chat.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: currentChat === null || currentChat === void 0 ? void 0 : currentChat.messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.role === \"bot\" ? \"bot\" : \"user\"}`,\n          children: msg.role === \"bot\" ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: msg.content,\n            remarkPlugins: [remarkGfm],\n            components: {\n              code({\n                node,\n                inline,\n                className,\n                children,\n                ...props\n              }) {\n                return !inline ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n                  style: materialLight,\n                  language: \"javascript\",\n                  ...props,\n                  children: String(children).replace(/\\n$/, \"\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n                  className: className,\n                  ...props,\n                  children: children\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, this);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-area\",\n        onSubmit: handleSend,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W7Fe4iC+SnSM5bQmsENGVAybchM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReactMarkdown","remarkGfm","Prism","SyntaxHighlighter","materialLight","jsxDEV","_jsxDEV","App","_s","chats","setChats","currentChatId","setCurrentChatId","input","setInput","storedChats","JSON","parse","localStorage","getItem","length","id","setItem","stringify","handleNewChat","newChat","Date","now","title","messages","handleSend","e","preventDefault","updatedChats","map","chat","role","content","res","get","botMessage","data","generated","prevChats","err","console","error","currentChat","find","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","msg","idx","remarkPlugins","components","code","node","inline","props","style","language","String","replace","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["/home/user/Desktop/Testing result/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { materialLight } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"./App.css\";\n\nfunction App() {\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [input, setInput] = useState(\"\");\n\n  // Load chats from localStorage\n  useEffect(() => {\n    const storedChats = JSON.parse(localStorage.getItem(\"chats\")) || [];\n    setChats(storedChats);\n    if (storedChats.length > 0) setCurrentChatId(storedChats[0].id);\n  }, []);\n\n  // Save chats to localStorage whenever chats change\n  useEffect(() => {\n    localStorage.setItem(\"chats\", JSON.stringify(chats));\n  }, [chats]);\n\n  const handleNewChat = () => {\n    const newChat = { id: Date.now(), title: \"New Chat\", messages: [] };\n    setChats([newChat, ...chats]);\n    setCurrentChatId(newChat.id);\n    setInput(\"\");\n  };\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!input) return;\n\n    // Update current chat messages with user input\n    const updatedChats = chats.map((chat) => {\n      if (chat.id === currentChatId) {\n        return {\n          ...chat,\n          messages: [...chat.messages, { role: \"user\", content: input }],\n        };\n      }\n      return chat;\n    });\n    setChats(updatedChats);\n    setInput(\"\");\n\n    // Fetch response from server (static for now)\n    try {\n      const res = await axios.get(\"http://localhost:3000/api/generate\"); // staticResponse\n      const botMessage = { role: \"bot\", content: res.data.generated };\n\n      setChats((prevChats) =>\n        prevChats.map((chat) =>\n          chat.id === currentChatId\n            ? { ...chat, messages: [...chat.messages, botMessage] }\n            : chat\n        )\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const currentChat = chats.find((chat) => chat.id === currentChatId);\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <button className=\"new-chat\" onClick={handleNewChat}>\n          + New Chat\n        </button>\n        <ul className=\"chat-list\">\n          {chats.map((chat) => (\n            <li\n              key={chat.id}\n              className={chat.id === currentChatId ? \"active\" : \"\"}\n              onClick={() => setCurrentChatId(chat.id)}\n            >\n              {chat.title || \"Untitled Chat\"}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"chat-window\">\n        <div className=\"messages\">\n          {currentChat?.messages.map((msg, idx) => (\n            <div\n              key={idx}\n              className={`message ${msg.role === \"bot\" ? \"bot\" : \"user\"}`}\n            >\n              {msg.role === \"bot\" ? (\n                <ReactMarkdown\n                  children={msg.content}\n                  remarkPlugins={[remarkGfm]}\n                  components={{\n                    code({ node, inline, className, children, ...props }) {\n                      return !inline ? (\n                        <SyntaxHighlighter\n                          style={materialLight}\n                          language=\"javascript\"\n                          {...props}\n                        >\n                          {String(children).replace(/\\n$/, \"\")}\n                        </SyntaxHighlighter>\n                      ) : (\n                        <code className={className} {...props}>\n                          {children}\n                        </code>\n                      );\n                    },\n                  }}\n                />\n              ) : (\n                <p>{msg.content}</p>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <form className=\"input-area\" onSubmit={handleSend}>\n          <textarea\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}